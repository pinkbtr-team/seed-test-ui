{"version":3,"sources":["connectors/index.js","components/Dialog/Backdrop.js","components/Dialog/CustomDialog.js","components/Layouts/Header.js","components/Pages/PublicRoundPage/constants.js","components/Elements/TelegramBox.js","components/Elements/StatusPill.js","components/Pages/PublicRoundPage/PublicRoundPage.js","config/index.js","utils/formatNumber.js","components/Elements/TimeLabel.js","components/Pages/PublicRoundPage/XirtamPage.js","App.js","reportWebVitals.js","index.js"],"names":["chainId","parseInt","process","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","_defineProperty","qrcode","pollingInterval","connectorsByName","_connectorsByName","_connectorsNames","Backdrop","props","_jsx","motion","div","className","onClick","initial","opacity","animate","exit","children","dropIn","hidden","y","visible","transition","duration","type","damping","stiffnesss","CustomDialog","_jsxs","_Fragment","Helmet","handleClose","variants","e","stopPropagation","Header","_useState","useState","_useState2","_slicedToArray","location","useLocation","_useState3","_useState4","walletModalOpen","setWalletModalOpen","_useEthers","useEthers","account","activate","activateBrowserWallet","error","_useState5","_useState6","activateError","setActivateError","useEffect","message","handleConnectWallet","value","handleOpenWalletModal","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","console","log","src","alt","style","marginLeft","id","color","shortenAddress","maxWidth","fontSize","AnimatePresence","exitBeforeEnter","onExitComplete","modalOpen","width","marginInline","XIRTAM_DATA","name","symbol","thumbnail","logo","routes","startAt","endAt","price","price_currency","actual_price_currency","TelegramBox","height","display","background","padding","borderRadius","fontWeight","window","open","margin","marginTop","StatusPill","status","formattedStartDate","formattedEndDate","withTime","textColor","backgroundColor","PUBLIC_ROUND_LIST","data","nowUnix","Math","floor","Date","now","startDate","toDate","endDate","format","_objectSpread","formatStatusAndTime","PublicRoundPage","minHeight","paddingTop","map","i","Link","to","concat","borderRight","marginBottom","XITRAM_SEED_ADDRESS","XITRAM_SEED_CONTRACT","utils","Interface","ETH_SEED_ABI","Contract","ETH_DECIMALS","fCRCurrency","number","numeral","Number","isInteger","fCRCurrency8","TimeLabel","startTime","endTime","_ref$isUnix","isUnix","XirtamPage","_useCalls","successModalOpen","setSuccessModalOpen","handleCloseSuccessModal","saleProgress","setSaleProgress","_useState7","_useState8","getAmount","setGetAmount","_useState9","_useState10","amount","setAmount","_useState11","_useState12","setStartTime","_useState13","_useState14","setEndTime","_useState15","_useState16","setStatus","_useState17","_useState18","statusText","setStatusText","_useState19","parseEther","_useState20","setSoftCap","_useState21","_useState22","hardCap","setHardCap","_useState23","_useState24","minBuy","setMinBuy","_useState25","_useState26","maxBuy","setMaxBuy","_useState27","_useState28","totalCollected","setTotalCollected","_useState29","_useState30","totalTokens","setTotalTokens","_useState31","_useState32","claimTokenBalance","setClaimTokenBalance","_useState33","_useState34","buyPrice","setBuyPrice","_useState35","_useState36","isTx","setIsTx","_useState37","_useState38","tx","setTx","contractData","useCalls","contract","method","args","ethBalance","useEtherBalance","_useState39","_useState40","errorMessage","setErrorMessage","setContractDatas","_ref2","_contractData$","_contractData$2","_contractData$3","_contractData$4","_contractData$5","_contractData$6","_contractData$7","_contractData$8","_contractData$9","_contractData$10","_contractData$11","date","progress","toString","dateFormat","mul","parseUnits","formatUnits","isAllUndefined","length","undefined","_useForm","useForm","defaultValues","register","handleSubmit","setValue","watch","setError","errors","formState","_useState41","_useState42","watchFields","subscription","_ref3","decimals","split","priceInUSD","xtr","formatEther","unsubscribe","cAmount","_useContractFunction","useContractFunction","transactionName","state","send","_useState43","_useState44","buying","setBuying","transaction","hash","_useState45","_useState46","accessState","setAccessState","_useState47","_useState48","passwordState","setPasswordState","handleAccess","_ref4","_callee2","requestOptions","_context2","redirect","fetch","then","response","text","result","alert","catch","_useState49","_useState50","copied","setCopied","timeout","setTimeout","clearTimeout","placeholder","onChange","target","justifyContent","rel","href","sub","onSubmit","required","max","min","step","shouldValidate","shouldDirty","preventDefault","gte","disabled","ReactPlaceholder","ready","showLoadingAnimation","CopyToClipboard","onCopy","toFixed","CProgress","CProgressBar","variant","animated","textAlign","lineHeight","shortenTransactionHash","helmetContext","config","readOnlyChainId","readOnlyUrls","networks","Sepolia","App","DAppProvider","HelmetProvider","context","Router","Routes","Route","path","exact","element","zIndex","position","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e9c6a01.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\n\n/* eslint-disable */\n\nconst POLLING_INTERVAL = 3000;\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10);\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] });\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: process.env.REACT_APP_RPC_URL },\n  qrcode: true,\n  supportedChainIds: [chainId],\n  pollingInterval: POLLING_INTERVAL,\n  chainId: chainId\n});\n\nexport const wallets = ['metamask', 'walletconnect'];\n\nexport const connectorsByName = {\n  ['metamask']: injected,\n  ['walletconnect']: walletconnect\n};\n\nexport const connectorsNames = {\n  ['metamask']: 'Metamask',\n  ['walletconnect']: 'Wallet Connect'\n};\n","import { motion } from 'framer-motion';\n\nconst dropIn = {\n  hidden: {\n    y: '-100vh',\n    opacity: 0,\n    transition: {\n      duration: 0.3,\n      type: 'spring',\n      damping: 25,\n      stiffnesss: 500\n    }\n  },\n  visible: {\n    y: '0',\n    opacity: 1\n  },\n  exit: {\n    y: '100vh',\n    opacity: 0\n  }\n};\n\nconst Backdrop = (props) => {\n  return (\n    <motion.div\n      className=\"dialog-backdrop\"\n      onClick={props.onClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      {props.children}\n    </motion.div>\n  );\n};\n\nexport default Backdrop;\n","import { motion } from 'framer-motion';\nimport { Helmet } from 'react-helmet-async';\nimport Backdrop from './Backdrop';\n\nconst dropIn = {\n  hidden: {\n    y: '-50vh',\n    opacity: 0\n  },\n  visible: {\n    y: '0',\n    opacity: 1,\n    transition: {\n      duration: 1,\n      type: 'spring',\n      damping: 15,\n      stiffnesss: 300\n    }\n  },\n  exit: {\n    y: '50vh',\n    opacity: 0\n  }\n};\n\nconst CustomDialog = (props) => {\n  return (\n    <>\n      <Helmet>\n        <style>{'body { overflow-y: hidden; }'}</style>\n      </Helmet>\n\n      <Backdrop onClick={props.handleClose}>\n        <motion.div\n          variants={dropIn}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"exit\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n          className=\"dialog-modal\"\n        >\n          <div className='gradient-border flex-column'>\n            {props.children}\n          </div>\n        </motion.div>\n      </Backdrop>\n    </>\n  );\n};\n\nexport default CustomDialog;\n","import { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useEthers, shortenAddress } from '@usedapp/core';\nimport { wallets, connectorsByName, connectorsNames } from '../../connectors';\n// components\nimport CustomDialog from '../Dialog/CustomDialog';\nimport { useLocation } from 'react-router';\n\nconst Header = (props) => {\n  const [connectedState, setConnectedState] = useState(false);\n  const location = useLocation()\n\n  const [walletModalOpen, setWalletModalOpen] = useState(false);\n\n  const { account, activate, activateBrowserWallet } = useEthers();\n\n  const { error } = useEthers();\n\n  const [activateError, setActivateError] = useState('');\n\n  useEffect(() => {\n    if (error) {\n      setActivateError(error.message);\n    }\n  }, [error]);\n\n  const handleConnectWallet = (value) => {\n\n    if (value == 'metamask') {\n      activateBrowserWallet()\n    } else {\n      activate(connectorsByName[value]);\n    }\n    setActivateError('');\n    setWalletModalOpen(false);\n  };\n\n  const handleOpenWalletModal = async () => {\n    setActivateError('');\n    setWalletModalOpen(true);\n  };\n\n  const handleCloseWalletModal = () => {\n    setWalletModalOpen(false);\n  };\n\n  useEffect(() => {\n    console.log('location', location)\n  }, [location])\n\n  return (\n    <>\n      <div\n        className='header-logo'\n      >\n        <img src=\"/static/img/pincubator-pr-logo.svg\" alt=\"\" />\n      </div>\n\n      <div className=\"header-wrapper\">\n        <div style={{ marginLeft: 'auto' }}>\n          {!account ? (\n            <button\n              onClick={handleOpenWalletModal}\n              className=\"button-outline unconnected pe-all rounded-full\"\n              style={{ maxWidth: '12rem', fontSize: activateError ? '0.6rem' : \"1rem\" }}\n              id=\"wallet-unconnected\"\n            >\n              {activateError ? <span>{activateError}</span> : <span>Connect Wallet</span>}\n            </button>\n          ) : (\n            <button\n              onClick={handleOpenWalletModal}\n              className=\"connect-wallet-btn connected color-green pe-all rounded-full\"\n              id=\"wallet-connected\" style={{ color: 'black' }}\n            >\n              {shortenAddress(account)}\n            </button>\n          )}\n        </div>\n      </div>\n\n      <AnimatePresence initial={false} exitBeforeEnter={true} onExitComplete={() => null}>\n        {walletModalOpen && (\n          <CustomDialog modalOpen={walletModalOpen} handleClose={handleCloseWalletModal}>\n            <h2 className=\"text-center mt-3\">Connect Wallet</h2>\n\n            <div\n              className=\"d-flex flex-wrap flex-column align-items-center mt-3 mb-3\"\n              style={{ width: '90%', marginInline: 'auto' }}\n            >\n              <h6>Connect with</h6>\n\n              <button\n                className=\"choose-wallet-btn m-2\"\n                value=\"metamask\"\n                onClick={() => handleConnectWallet('metamask')}\n              >\n                <img src=\"/static/img/metamask.jpg\" alt=\"\" className=\"wallet-logo\" />\n                Metamask\n              </button>\n\n              <button\n                className=\"choose-wallet-btn m-2\"\n                value=\"walletConnect\"\n                onClick={() => handleConnectWallet('walletconnect')}\n              >\n                <img src=\"/static/img/walletconnect.jpg\" alt=\"\" className=\"wallet-logo\" />\n                <span>WalletConnect</span>\n              </button>\n\n\n              {/*\n                <button className=\"choose-wallet-btn m-2\" value=\"Binance\" onClick={handleConnectWallet}>\n                  <img src=\"/static/img/binance.jpg\" alt=\"\" className=\"wallet-logo\" />\n                  Binance\n                </button> \n              */}\n            </div>\n          </CustomDialog>\n        )}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport default Header;\n","import { format, toDate } from \"date-fns\";\n\nexport const XIRTAM_DATA = {\n  name: 'XIRTAM',\n  symbol: 'XIRTAM',\n  thumbnail: '/static/seed/XIRTAM/thumbnail.jpg',\n  logo: '/static/seed/XIRTAM/logo.png',\n  routes: 'xirtam',\n  startAt: 1682571996,\n  endAt: 1682658396,\n  price: 1 / 0.037,\n  price_currency : 'USD',\n  actual_price_currency : 'ETH', \n}\n\nexport const formatStatusAndTime = (data) => {\n  const nowUnix = Math.floor(Date.now() / 1000);\n  let status = \"\" // \"COMING SOON\" | \"ACTIVE\" | \"ENDED\n  if (nowUnix < data.startAt) status = \"Scheduled\"\n  else if (nowUnix >= data.startAt && nowUnix <= data.endAt) status = \"Active\"\n  else if (nowUnix > data.endAt) status = \"Closed\"\n\n  const startDate = toDate(data.startAt * 1000)\n  const endDate = toDate(data.endAt * 1000)\n\n  const formattedStartDate = format(startDate, 'dd MMMM yyyy - hh:mm:ss')\n  const formattedEndDate = format(endDate, 'dd MMMM yyyy - hh:mm:ss')\n\n  return {\n    ...data,\n    status,\n    formattedStartDate,\n    formattedEndDate\n  }\n}","import React from 'react'\nimport { Helmet } from 'react-helmet-async'\n\nexport default function TelegramBox() {\n  return (\n    <div className='d-flex'>\n      <div className='gradient-border p-3 mt-2 align-items-center bg-black mx-auto w-100' style={{ maxWidth: '28rem' }}>\n        <div style={{ width: '6rem', height: '6rem', display: 'flex', background: 'black', padding: '0.4rem', borderRadius: '0.6rem' }}>\n          <img src=\"/static/img/pincubator-logo.svg\" alt=\"\" style={{ width: '100%' }} />\n        </div>\n\n        <div className='ms-3'>\n          <h6 style={{ fontSize: '0.8rem', fontWeight: '400', opacity: '0.6' }}>\n            Join our Telegram Channel for the next Seed!\n          </h6>\n\n          <h6 style={{ fontSize: '0.8rem', fontWeight: '600' }}>\n            Pincubator 🌱\n          </h6>\n\n          <h6 style={{ fontSize: '0.6rem', fontWeight: '500' }}>\n            Where Alphas are born.\n          </h6>\n\n          <button \n          onClick={() => window.open('https://t.me/+8twkfKZgqmM2MjVh', '_blank')}\n          className='btn-hover purple-fill' style={{ fontWeight: '500', fontSize: '0.7rem', padding: '0.4rem 2rem', margin: '0', marginTop: '0.4rem' }}>\n            Join\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function StatusPill({ status, formattedStartDate, formattedEndDate }) {\n  let withTime = false;\n  if (formattedStartDate && formattedEndDate) withTime = true;\n\n  let textColor = 'white'\n  if(status === \"Active\"){\n    textColor = 'black'\n  }\n\n  return (\n    <>\n      {status === \"Scheduled\" &&\n        <div>\n          <div className=\"pill\" style={{ backgroundColor: 'var(--main-purple)', color: textColor }}>\n            Scheduled\n          </div>\n          {withTime &&\n            <div style={{ fontSize: '0.8rem', marginTop: '1rem' }}>\n              <span style={{ opacity: '0.6' }}>\n                Start at:&nbsp;\n              </span>\n              <span>\n                {formattedStartDate}\n              </span>\n            </div>\n          }\n        </div>\n      }\n\n      {status === \"Active\" &&\n        <div>\n          <div className=\"pill\" style={{ backgroundColor: 'var(--main-green)', color: textColor }}>\n            Active\n          </div>\n          {withTime &&\n            <div style={{ fontSize: '0.8rem', marginTop: '1rem' }}>\n              <span style={{ opacity: '0.6' }}>\n                Active until:&nbsp;\n              </span>\n              <span>\n                {formattedEndDate}\n              </span>\n            </div>\n          }\n        </div>\n      }\n\n      {status === \"Closed\" &&\n        <div>\n          <div className=\"pill\" style={{ backgroundColor: '#ffffff40', color: textColor }}>\n            Closed\n          </div>\n          {withTime &&\n            <div style={{ fontSize: '0.8rem', marginTop: '1rem' }}>\n              <span style={{ opacity: '0.6' }}>\n                Ended at:&nbsp;\n              </span>\n              <span>\n                {formattedEndDate}\n              </span>\n            </div>\n          }\n        </div>\n      }\n    </>\n  )\n}\n","import '../../styling/seed.css';\nimport { m, motion } from 'framer-motion';\nimport { format, toDate } from 'date-fns'\nimport { Link } from 'react-router-dom';\nimport { XIRTAM_DATA, formatStatusAndTime } from './constants';\n\nimport TelegramBox from '../../Elements/TelegramBox';\nimport StatusPill from '../../Elements/StatusPill';\n\nconst PUBLIC_ROUND_LIST = [\n  formatStatusAndTime(XIRTAM_DATA)\n]\n\nconst PublicRoundPage = () => {\n  const nowUnix = Math.floor(Date.now() / 1000);\n\n  return (\n    <>\n      <section>\n        <motion.div\n          initial={{ opacity: 0, y: '-20vh' }}\n          animate={{ opacity: 1, y: '0' }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 1, type: 'spring' }}\n          className=\"container d-flex flex-column\"\n          style={{ height: '100%', minHeight: '98vh', paddingTop: '6rem' }}\n        >\n          <div>\n            <h2>Public Rounds</h2>\n\n            <div className='mb-4'>\n              {PUBLIC_ROUND_LIST.map((data, i) => {\n                const { status, formattedStartDate, formattedEndDate } = data;\n\n                return (\n                  <div className=\"w-full mt-4\" key={i}>\n                    <Link to={`/${data.routes}`}>\n                      <div className=\"gradient-border d-flex flex-row align-item-center\">\n                        <img src={data.thumbnail} alt=\"\" style={{ width: '10rem', borderRadius: '0.5rem', borderRight: '0' }} />\n\n                        <div className='d-flex flex-column p-3'>\n                          <h3 className=\"SeedList-symbol\">${data.symbol}</h3>\n                          <h6 className=\"SeedList-name\">{data.name}</h6>\n\n                          <StatusPill status={status} \n                            formattedEndDate={formattedEndDate} \n                            formattedStartDate={formattedStartDate} \n                          />\n                        </div>\n                      </div>\n                    </Link>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n\n          <div style={{ marginTop: 'auto', marginBottom: '4rem' }}>\n            <TelegramBox />\n          </div>\n        </motion.div>\n      </section>\n    </>\n  );\n};\n\nexport default PublicRoundPage;\n","import { Contract, utils } from 'ethers';\n\nimport ETH_SEED_ABI from '../abi/ETHSeedSale.json';\n\n// XIRTAM\nexport const XITRAM_SEED_ADDRESS = '0x97850d8b2f7a5ad186cae705ca978a693ef48443'\nexport const XITRAM_SEED_INTERFACE = new utils.Interface(ETH_SEED_ABI)\nexport const XITRAM_SEED_CONTRACT = new Contract(XITRAM_SEED_ADDRESS, ETH_SEED_ABI)\nexport const ETH_DECIMALS = 18","import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '$00' : '$0.00');\n}\n\nexport function fCRCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '0,0' : '0,0.00');\n}\n\nexport function fCRCurrency8(number) {\n  return numeral(number).format(Number.isInteger(number) ? '0000' : '0.00000000');\n}\n\nexport function fCRCurrency18(number) {\n    return numeral(number).format(Number.isInteger(number) ? '0000' : '0 0.0000000000000000000');\n  }\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","import { format, toDate } from 'date-fns'\nimport React from 'react'\n\nexport default function TimeLabel({ status, startTime, endTime, isUnix = true }) {\n  let startDate;\n  let endDate;\n  let formattedStartDate;\n  let formattedEndDate;\n\n  if(isUnix){\n    startDate = toDate(startTime * 1000)\n    endDate = toDate(endTime * 1000)\n    formattedStartDate = format(startDate, 'dd MMMM yyyy - mm:ss')\n    formattedEndDate = format(endDate, 'dd MMMM yyyy - mm:ss')\n  }else{\n    formattedStartDate = startTime\n    formattedEndDate = endTime\n  }\n\n  return (\n    <>\n      {status === \"Scheduled\" &&\n        `Start at: ${formattedStartDate}`\n      }\n\n      {status === \"Active\" &&\n        `Active until: ${formattedEndDate}`\n      }\n\n      {status === \"Closed\" &&\n        `Ended at: ${formattedEndDate}`\n      }\n    </>\n  )\n}\n","import { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { CProgress, CProgressBar } from '@coreui/react';\nimport { Ether, Hardhat, shortenTransactionHash, useBlockNumber, useCall, useCalls } from '@usedapp/core';\nimport { Link } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { utils } from 'ethers';\nimport CustomDialog from '../../Dialog/CustomDialog';\n\nimport ClaimButton from '../../Form/ClaimButton';\n\nimport { useEthers, shortenAddress, useContractFunction, useContractCalls, useEtherBalance } from '@usedapp/core';\nimport { XITRAM_SEED_ADDRESS, XITRAM_SEED_CONTRACT, XITRAM_SEED_INTERFACE, USDC_ADDRESS, USDC_CONTRACT, ETH_DECIMALS } from '../../../config';\nimport { fCRCurrency, fCRCurrency8 } from '../../../utils/formatNumber';\nimport ReactPlaceholder from 'react-placeholder';\nimport \"react-placeholder/lib/reactPlaceholder.css\"\nimport dateFormat from \"dateformat\";\nimport { XIRTAM_DATA } from './constants';\nimport StatusPill from '../../Elements/StatusPill';\nimport TimeLabel from '../../Elements/TimeLabel';\nimport TelegramBox from '../../Elements/TelegramBox';\nimport { useXirtamCalls } from '../../../hooks/xirtam/contractCall';\n\nconst { price, price_currency, name, symbol, actual_price_currency, logo } = XIRTAM_DATA;\n\nexport default function XirtamPage() {\n  const { account } = useEthers() ?? {\n    account: ''\n  };\n\n  // SUCCESS DIALOG\n  const [successModalOpen, setSuccessModalOpen] = useState(false);\n  const [successClaimModalOpen, setSuccessClaimModalOpen] = useState(false);\n\n  const handleCloseSuccessModal = () => {\n    setSuccessModalOpen(false);\n  };\n\n  const handleCloseSuccessClaimModal = () => {\n    setSuccessClaimModalOpen(false);\n  }\n\n  // SALE\n  const [saleProgress, setSaleProgress] = useState(0);\n  const [getAmount, setGetAmount] = useState(\"0\");\n\n  const [amount, setAmount] = useState(\"0.1\")\n\n  const [startTime, setStartTime] = useState(0)\n  const [endTime, setEndTime] = useState(0)\n  const [status, setStatus] = useState(0)\n  const [statusText, setStatusText] = useState('')\n  const [softCap, setSoftCap] = useState(utils.parseEther('0'))\n  const [hardCap, setHardCap] = useState(utils.parseEther('0'))\n  const [minBuy, setMinBuy] = useState(utils.parseEther('0'))\n  const [maxBuy, setMaxBuy] = useState(utils.parseEther('0'))\n  const [totalCollected, setTotalCollected] = useState(utils.parseEther('0'))\n  const [totalTokens, setTotalTokens] = useState(utils.parseEther('0'))\n  const [claimTokenBalance, setClaimTokenBalance] = useState(utils.parseEther('0'))\n\n  const [buyPrice, setBuyPrice] = useState(utils.parseEther('0'))\n\n  const [isTx, setIsTx] = useState(false)\n  const [tx, setTx] = useState('')\n\n  // const contractData = useContractCalls([\n  //   {\n  //     abi: XITRAM_SEED_INTERFACE,\n  //     address: XITRAM_SEED_ADDRESS,\n  //     method: 'startTime',\n  //     args: []\n  //   },\n  //   {\n  //     abi: XITRAM_SEED_INTERFACE,\n  //     address: XITRAM_SEED_ADDRESS,\n  //     method: 'endTime',\n  //     args: []\n  //   },\n  //   {\n  //     abi: XITRAM_SEED_INTERFACE,\n  //     address: XITRAM_SEED_ADDRESS,\n  //     method: 'status',\n  //     args: []\n  //   },\n  //   {\n  //     abi: XITRAM_SEED_INTERFACE,\n  //     address: XITRAM_SEED_ADDRESS,\n  //     method: 'SOFTCAP',\n  //     args: []\n  //   },\n  //   {\n  //     abi: XITRAM_SEED_INTERFACE,\n  //     address: XITRAM_SEED_ADDRESS,\n  //     method: 'HARDCAP',\n  //     args: []\n  //   },\n  //   {\n  //     abi: XITRAM_SEED_INTERFACE,\n  //     address: XITRAM_SEED_ADDRESS,\n  //     method: 'MIN_ETH_PER_WALLET',\n  //     args: []\n  //   },\n  //   {\n  //     abi: XITRAM_SEED_INTERFACE,\n  //     address: XITRAM_SEED_ADDRESS,\n  //     method: 'MAX_ETH_PER_WALLET',\n  //     args: []\n  //   },\n  //   {\n  //     abi: XITRAM_SEED_INTERFACE,\n  //     address: XITRAM_SEED_ADDRESS,\n  //     method: 'totalCollected',\n  //     args: []\n  //   },\n  //   {\n  //     abi: XITRAM_SEED_INTERFACE,\n  //     address: XITRAM_SEED_ADDRESS,\n  //     method: 'participants',\n  //     args: [account]\n  //   },\n  //   {\n  //     abi: XITRAM_SEED_INTERFACE,\n  //     address: XITRAM_SEED_ADDRESS,\n  //     method: 'getLatestPrice',\n  //     args: []\n  //   },\n  //   {\n  //     abi: XITRAM_SEED_INTERFACE,\n  //     address: XITRAM_SEED_ADDRESS,\n  //     method: 'getTokenAmount',\n  //     args: [account]\n  //   }\n  // ]) \n\n  // change to useCalls\n  const contractData = useCalls([\n    {\n      contract: XITRAM_SEED_CONTRACT,\n      method: 'startTime',\n      args: []\n    },\n    {\n      contract: XITRAM_SEED_CONTRACT,\n      method: 'endTime',\n      args: []\n    },\n    {\n      contract: XITRAM_SEED_CONTRACT,\n      method: 'status',\n      args: []\n    },\n    {\n      contract: XITRAM_SEED_CONTRACT,\n      method: 'SOFTCAP',\n      args: []\n    },\n    {\n      contract: XITRAM_SEED_CONTRACT,\n      method: 'HARDCAP',\n      args: []\n    },\n    {\n      contract: XITRAM_SEED_CONTRACT,\n      method: 'MIN_ETH_PER_WALLET',\n      args: []\n    },\n    {\n      contract: XITRAM_SEED_CONTRACT,\n      method: 'MAX_ETH_PER_WALLET',\n      args: []\n    },\n    {\n      contract: XITRAM_SEED_CONTRACT,\n      method: 'totalCollected',\n      args: []\n    },\n    {\n      contract: XITRAM_SEED_CONTRACT,\n      method: 'participants',\n      args: [account]\n    },\n    {\n      contract: XITRAM_SEED_CONTRACT,\n      method: 'getLatestPrice',\n      args: []\n    },\n    {\n      contract: XITRAM_SEED_CONTRACT,\n      method: 'getTokenAmount',\n      args: [account]\n    }\n  ]) ?? {}\n\n\n  const ethBalance = useEtherBalance(account)\n\n  const [errorMessage, setErrorMessage] = useState(0)\n\n  const setContractDatas = async () => {\n    try {\n      if (contractData[0]) {\n\n        var date = new Date(contractData[0].value.toString() * 1000);\n\n        setStartTime(dateFormat(date, 'mmmm dS, yyyy, HH:MM:ss'))\n      }\n\n      if (contractData[1]) {\n        var date = new Date(contractData[1].value.toString() * 1000);\n\n        setEndTime(dateFormat(date, 'mmmm dS, yyyy, HH:MM:ss'))\n      }\n\n      if (contractData[2]?.value) {\n        setStatus(contractData[2].value);\n\n        if (contractData[2].value == 0) {\n          setStatusText('Scheduled')\n        }\n\n        if (contractData[2].value == 1) {\n          setStatusText('Active')\n        }\n\n        if (contractData[2].value == 2) {\n          setStatusText('Closed')\n        }\n\n        if (contractData[2].value == 3) {\n          setStatusText('Failed')\n        }\n      }\n\n      if (contractData[3]?.value) {\n        setSoftCap(contractData[3].value[0]);\n      }\n\n      if (contractData[4]?.value) {\n        setHardCap(contractData[4].value[0]);\n      }\n\n      if (contractData[5]?.value) {\n        setMinBuy(contractData[5].value[0]);\n      }\n\n      if (contractData[6]?.value) {\n        setMaxBuy(contractData[6].value[0]);\n      }\n\n      if (contractData[7]?.value) {\n        setTotalCollected(contractData[7].value[0]);\n      }\n\n      if (contractData[8]?.value) {\n        setTotalTokens(contractData[8].value[0]);\n      }\n\n\n      if (contractData[9]?.value) {\n        setBuyPrice(contractData[9].value[0]);\n      }\n\n      if (contractData[10]?.value) {\n        setClaimTokenBalance(contractData[10].value[0]);\n      }\n\n\n      if (contractData[4]?.value && contractData[7]?.value) {\n\n        const progress = contractData[7].value[0].mul(utils.parseUnits('100', 6)).div(contractData[4].value[0])\n\n        setSaleProgress(Number(utils.formatUnits(progress, 6)))\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    // check if contractData array is not all undefined\n    let isAllUndefined = true;\n    for (let i = 0; i < contractData.length; i++) {\n      if (contractData[i] !== undefined) {\n        isAllUndefined = false;\n        break;\n      }\n    }\n    if (!isAllUndefined) {\n      setContractDatas()\n      // console.log(contractData)\n    }\n  }, [contractData]);\n\n\n  useEffect(() => {\n\n    if (isTx) {\n      setSuccessModalOpen(true);\n      setIsTx(false)\n    }\n  }, [totalTokens, tx]);\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    value,\n    setError,\n    watch,\n    formState: { errors }\n  } = useForm({\n    defaultValues: {\n      amount: \"0.1\"\n    }\n  });\n  const [result, setResult] = useState('');\n  const watchFields = watch(['amount']);\n\n  useEffect(() => {\n    const subscription = watch((value, { name, type }) => {\n      const decimals = value.amount.split(\".\")\n\n      if (value.amount == '') {\n        setAmount('0')\n      } else {\n        setAmount(value.amount)\n      }\n\n      if (decimals.length > 1 && decimals[1].length > 18) {\n        setAmount('0')\n      } else {\n        if (value.amount != \"\") {\n          const priceInUSD = utils.parseEther(value.amount.toString()).mul(buyPrice).div(utils.parseUnits(\"1\", 8))\n          const price = utils.parseEther(\"0.037\")\n\n          const xtr = utils.formatEther(priceInUSD.mul(utils.parseEther(\"1\").div(price)))\n          setGetAmount(xtr);\n        }\n      }\n    });\n\n    setErrorMessage('')\n    return () => subscription.unsubscribe();\n  }, [watchFields]);\n\n\n  useEffect(() => {\n    let cAmount;\n    if (amount == \"0\") {\n      cAmount = \"0.01\"\n    } else {\n      cAmount = amount\n    }\n    const priceInUSD = utils.parseEther(cAmount.toString()).mul(buyPrice).div(utils.parseUnits(\"1\", 8))\n    const price = utils.parseEther(\"0.037\")\n\n    const xtr = utils.formatEther(priceInUSD.mul(utils.parseEther(\"1\").div(price)))\n    setGetAmount(xtr);\n\n    const amountBN = utils.parseUnits(amount.toString(), ETH_DECIMALS)\n\n  }, [minBuy, maxBuy]);\n\n  const handleMaxBuy = (e) => {\n    setValue('amount', utils.formatUnits((maxBuy.sub(totalTokens)).toString(), ETH_DECIMALS).toString(), {\n      shouldValidate: true,\n      shouldDirty: true\n    });\n    e.preventDefault();\n  };\n\n  const { state, send } = useContractFunction(XITRAM_SEED_CONTRACT, 'buy', { transactionName: 'Sell Tokens' });\n\n  const [buying, setBuying] = useState(false)\n\n  useEffect(() => {\n\n    if (state.status == 'Exception') {\n      setErrorMessage(state.errorMessage)\n    }\n    if (state.status === 'Exception' || state.status === 'Fail') {\n      setBuying(false)\n      setIsTx(false)\n      setErrorMessage(state.errorMessage)\n    }\n\n    if (state.status === 'None') {\n      setBuying(false)\n      setIsTx(false)\n      setErrorMessage('')\n    }\n\n    if (state.status === 'Success') {\n      setBuying(false)\n      setTx(state.transaction.hash)\n      setIsTx(true)\n      setErrorMessage('')\n    }\n  }, [state]);\n\n  const handleBuySubmit = (data) => {\n    setBuying(true)\n    send({ value: utils.parseUnits(amount.toString(), ETH_DECIMALS).toString() })\n  };\n\n  const onError = (errors, e) => console.log(errors, e);\n\n  // TODO: make it to false later\n  const [accessState, setAccessState] = useState(true);\n  const [passwordState, setPasswordState] = useState('');\n\n  const handleAccess = async () => {\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n\n    fetch(`https://admin.pincubator9059.workers.dev/?passwd=${passwordState}`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        if (result === 'VALID') {\n          setAccessState(true);\n        } else {\n          alert(\"INVALID PASSWORD\");\n        }\n      })\n      .catch(error => console.log('error', error));\n  }\n\n  const handlePasswordChange = (e) => {\n    setPasswordState(e.target.value);\n  }\n\n  // copy to clipboard\n  const [copied, setCopied] = useState(false);\n  // set copied to false if copied is true after 2 seconds\n  useEffect(() => {\n    if (copied) {\n      const timeout = setTimeout(() => setCopied(false), 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [copied]);\n\n  return (\n    <>\n      {!accessState &&\n        <section className=\"d-flex flex-column justify-content-center align-items-center\" style={{ height: '100vh', width: '100vw' }}>\n          <h3 className=\"text-center\">Input Public Round Password for</h3>\n          <h2 style={{ fontWeight: 'bold' }}>${symbol}</h2>\n\n          <input className=\"purple-input form-control\" style={{ maxWidth: '30rem' }} placeholder=\"Password\" value={passwordState} onChange={handlePasswordChange} />\n          <button onClick={handleAccess} className=\"button-outline mt-3\">ACCESS</button>\n        </section>\n      }\n\n      {accessState &&\n        <>\n          <section className=\"section-dashboard\">\n            <motion.div\n              initial={{ opacity: 0, y: '-20vh' }}\n              animate={{ opacity: 1, y: '0' }}\n              exit={{ opacity: 0 }}\n              transition={{ duration: 1, type: 'spring' }}\n              className=\"container pt-5 d-flex flex-column\"\n              style={{ height: '100%', minHeight: '90vh', paddingTop: '7rem' }}\n            >\n              <Link to=\"/\" className=\"mt-5 mb-3\" style={{ width: 'fit-content' }}>\n                <button className=\"button-outline\">Go Back</button>\n              </Link>\n\n              <div className=\"Seed-introduction mb-5\">\n                <div className='row'>\n                  <div className='col-12 col-lg-8 mb-4'>\n                    <h4 style={{ fontWeight: '600' }}>\n                      Token Info\n                    </h4>\n\n                    <div className='gradient-border p-3 d-flex flex-column mb-3'>\n                      <div className='d-flex flex-row align-items-center w-100'>\n                        <img src={logo} alt=\"\" className=\"Seed-introduction-logo\" />\n\n                        <div className='pl-4 flex flex-column w-100'>\n                          <div className='d-flex flex-row items-center' style={{ justifyContent: 'space-between' }}>\n                            <h4>\n                              {name} (${symbol})\n                            </h4>\n\n                            <StatusPill status={statusText} />\n                          </div>\n\n                          <div className='d-flex flex-row items-center' style={{ justifyContent: 'space-between' }}>\n                            <h6 style={{ fontWeight: '400' }}>\n                              {/* 1 {price_currency} = {1 / price} {symbol} */}\n                              1 {symbol} = {1 / price} {price_currency}\n                            </h6>\n\n                            <div>\n                              Network: Ethereum\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <p style={{ fontSize: '0.8rem', marginTop: '1rem' }}>\n                        XIRTAM gives players a totally original and enjoyable experience to utilize their expertise to make money.\n                        <br /><br />\n                        Players are emerged into a world of FREE play-to-earn gaming offering choice and excitement in their gameplay.\n                        <br /><br />\n                        XIRTAM is a non-KYC reputation-building platform created for and by the community to promote both cryptocurrency education and financial incentives for all users.\n                        <br /><br />\n                        Partnered with $CULT, $VOLT and an integrated utility for the $TSUKA ecosystem, XIRTAM is leading the #GameFi industry for 2023\n                      </p>\n\n                      <p style={{ fontSize: '0.8rem', marginTop: '1rem' }}>\n                        Website: <a target='_blank' rel='noreferrer' href=\"https://www.xirtamtoken.com\">https://www.xirtamtoken.com</a>\n                        <br /><br />\n                        Whitepaper: <a target='_blank' rel='noreferrer' href=\"https://xirtam.gitbook.io/docs/\">https://xirtam.gitbook.io/docs/</a>\n                        <br /><br />\n                        Twitter: <a target='_blank' rel='noreferrer' href=\"https://twitter.com/xirtamtoken\">https://twitter.com/xirtamtoken</a>\n                        <br /><br />\n                        Telegram: <a target='_blank' rel='noreferrer' href=\"https://t.me/xirtamtoken\">https://t.me/xirtamtoken</a>\n                        <br /><br />\n                        Medium: <a target='_blank' rel='noreferrer' href=\"https://medium.com/@xirtamtoken\">https://medium.com/@xirtamtoken</a>\n                      </p>\n                    </div>\n\n                    {/* SALE BOX */}\n                    {!(status == 1 && account && (maxBuy.sub(totalTokens).toString()) != 0) &&\n                      <div className=\"mb-3\">\n                        <h4 className=\"fw-bold\">Sale</h4>\n                        <div className=\"d-flex flex-column round-purple-border mt-2 bg-darken p-2\">\n                          <form onSubmit={handleSubmit(handleBuySubmit, onError)}>\n                            <div className=\"d-flex flex-row mt-2\">\n                              <input\n                                {...register('amount', { required: true, max: utils.formatUnits((maxBuy.sub(totalTokens)).toString(), ETH_DECIMALS), min: utils.formatUnits(minBuy.toString(), ETH_DECIMALS) })}\n                                type=\"number\"\n                                step=\"0.000000000000000001\"\n                                className=\"form-control purple-input Seed-buy-amount\"\n                                placeholder=\"Buy amount\"\n                              />\n                              <button onClick={handleMaxBuy} className=\"button-outline purple-fill Seed-max-btn\">\n                                MAX\n                              </button>\n                            </div>\n                            {errors.amount && (\n                              <span className=\"invalid-danger\" style={{ marginTop: '-0.2' }}>\n                                Min: {utils.formatUnits(minBuy.toString(), ETH_DECIMALS)} {price_currency} | Max: {utils.formatUnits((maxBuy.sub(totalTokens)).toString(), ETH_DECIMALS)} {price_currency}\n                              </span>\n                            )}\n\n                            {errorMessage ? (\n                              <span className=\"invalid-danger\" style={{ marginTop: '-0.2' }}>\n                                {errorMessage}\n                              </span>\n                            ) : (\n                              ''\n                            )}\n                            {<div className=\"buy-result\">You'll get ~ {fCRCurrency8(getAmount)} {symbol}</div>}\n\n                            {(ethBalance !== undefined && ethBalance.gte(utils.parseUnits(amount))) ? (\n                              <button className=\"button-outline purple-fill mt-4 w-100\" style={{ padding: '0.3rem' }} type=\"submit\" disabled={buying}>\n                                {!buying ? (\n                                  'Buy'\n                                ) : (\n                                  'Buying...'\n                                )}\n                              </button>\n                            ) : (\n                              <span className=\"invalid-danger\" style={{ marginTop: '-0.2' }}>\n                                No {actual_price_currency} available to buy. {ethBalance != undefined ? \"Available \" + fCRCurrency8(utils.formatEther(ethBalance)) : \"\"}\n                              </span>\n                            )}\n                          </form>\n\n                          {(account && ((maxBuy.sub(totalTokens).toString()) == 0)) ? (\n                            <div>\n                              <span className=\"invalid-danger\" style={{ marginTop: '-0.2' }}>\n                                Max ETH per wallet has been reached\n                              </span>\n                            </div>\n                          ) : (\n                            ''\n                          )}\n                        </div>\n                      </div>\n                    }\n\n                    {account &&\n                      <>\n                        <div className=\"mb-3\">\n                          <h5>My Balance Info</h5>\n\n                          <div className=\"Seed-sale-item gradient-border\">\n                            <h6 className=\"m-1\">\n                              XITRAM Balance: <span className=\"Seed-sale-item-amount\">\n                                {claimTokenBalance ? (\n                                  <ReactPlaceholder type=\"textRow\" ready={claimTokenBalance !== undefined} showLoadingAnimation={true}>\n                                    {fCRCurrency8(utils.formatEther((claimTokenBalance)))} XIRTAM\n                                  </ReactPlaceholder>\n                                ) : (\n                                  '0 VINCI'\n                                )}\n\n                              </span>\n                            </h6>\n                          </div>\n                        </div>\n\n                        {/* Address Box */}\n                        <div className='gradient-border p-3 flex-column mb-3'>\n                          <div style={{ fontSize: '0.8rem' }}>\n                            Alternatively, you can buy XIRTAM by sending ETH directly to the following address:\n                          </div>\n                          <div className='d-flex flex-row align-items-center mt-2'>\n                            <a\n                              // link to etherscan\n                              target='_blank'\n                              rel='noreferrer'\n                              href={`https://etherscan.io/address/${XITRAM_SEED_ADDRESS}`}\n                              style={{ fontWeight: '600', marginTop: '0.2rem', marginBottom: '0', fontSize: '1rem' }}>\n                              {XITRAM_SEED_ADDRESS}\n                            </a>\n\n                            <CopyToClipboard text={XITRAM_SEED_ADDRESS} onCopy={() => setCopied(true)}>\n                              <button className='btn-hover purple-fill m-0 ms-auto py-1 px-2' style={{ fontSize: '0.8rem' }}>\n                                {copied ? 'Copied' : 'Copy'}\n                              </button>\n                            </CopyToClipboard>\n                          </div>\n                        </div>\n                      </>\n                    }\n                  </div>\n\n\n                  {/* SALE INFO */}\n                  <div className=\"col-12 col-lg-4\">\n                    <h4 style={{ fontWeight: '600' }}>\n                      Sale Info\n                    </h4>\n\n                    <div className='mb-3'>\n                      <div className=\"d-flex flex-row Seed-progress-label\" style={{ width: '100%' }}>\n                        <h6 style={{ fontSize: '0.8rem' }}>\n                          Sale Progress\n                        </h6>\n                        <div className=\"progress-percent-container ms-auto\">\n                          {saleProgress.toFixed(2)}%\n                        </div>\n                      </div>\n                      <CProgress className=\"mb-1\">\n                        <CProgressBar color=\"#CCCCCC\" variant=\"striped\" animated value={saleProgress} />\n                      </CProgress>\n\n                      <div style={{ fontSize: '0.8rem', textAlign: 'right' }}>\n                        <TimeLabel startTime={startTime} endTime={endTime} status={statusText} isUnix={false} />\n                      </div>\n                    </div>\n\n                    <div className=\"gradient-border p-2 mb-3\">\n                      <h6 className=\"m-1\" style={{ lineHeight: '1.5' }}>\n                        <ReactPlaceholder type=\"textRow\" ready={true} showLoadingAnimation={true}>\n                          {/* <ReactPlaceholder type=\"textRow\" ready={hardCap.toString() > 0} showLoadingAnimation={true}> */}\n                          Hardcap: <span className=\"Seed-sale-item-amount\">{fCRCurrency(utils.formatUnits(hardCap.toString(), ETH_DECIMALS))} {actual_price_currency}</span>\n                        </ReactPlaceholder>\n                      </h6>\n                    </div>\n\n                    <div className=\"gradient-border p-2 mb-3\">\n                      <h6 className=\"m-1\" style={{ lineHeight: '1.5' }}>\n                        <ReactPlaceholder type=\"textRow\" ready={true} showLoadingAnimation={true}>\n                          {/* <ReactPlaceholder type=\"textRow\" ready={minBuy.toString() > 0} showLoadingAnimation={true}> */}\n                          Min {actual_price_currency} per wallet: <span className=\"Seed-sale-item-amount d-block\">{fCRCurrency(utils.formatUnits(minBuy.toString(), ETH_DECIMALS))} {actual_price_currency}</span>\n                        </ReactPlaceholder>\n                      </h6>\n                    </div>\n\n                    <div className=\"gradient-border p-2 mb-3\">\n                      <h6 className=\"m-1\" style={{ lineHeight: '1.5' }}>\n                        <ReactPlaceholder type=\"textRow\" ready={true} showLoadingAnimation={true}>\n                          {/* <ReactPlaceholder type=\"textRow\" ready={maxBuy.toString() > 0} showLoadingAnimation={true}> */}\n                          Max {actual_price_currency} per wallet: <span className=\"Seed-sale-item-amount d-block\">{fCRCurrency(utils.formatUnits(maxBuy.toString(), ETH_DECIMALS))} {actual_price_currency}</span>\n                        </ReactPlaceholder>\n                      </h6>\n                    </div>\n\n                    <div className=\"gradient-border p-2 mb-3\">\n                      <h6 className=\"m-1\" style={{ lineHeight: '1.5' }}>\n                        <ReactPlaceholder type=\"textRow\" ready={true} showLoadingAnimation={true}>\n                          {/* <ReactPlaceholder type=\"textRow\" ready={totalCollected.toString()} showLoadingAnimation={true}> */}\n                          Total Collected: <span className=\"Seed-sale-item-amount\">{fCRCurrency8(utils.formatUnits(totalCollected.toString(), ETH_DECIMALS))} {actual_price_currency}</span>\n                        </ReactPlaceholder>\n                      </h6>\n                    </div>\n\n                    <div className=\"gradient-border p-2 mb-3\">\n                      <h6 className=\"m-1\" style={{ lineHeight: '1.5' }}>\n                        <ReactPlaceholder type=\"textRow\" ready={true} showLoadingAnimation={true}>\n                          {/* <ReactPlaceholder type=\"textRow\" ready={maxBuy.toString() > 0} showLoadingAnimation={true}> */}\n                          Current {actual_price_currency} / USD rate: <span className=\"Seed-sale-item-amount d-block\">{utils.formatUnits(buyPrice.toString(), 8)} $</span>\n                        </ReactPlaceholder>\n                      </h6>\n                    </div>\n\n                    <TelegramBox />\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          </section>\n\n          <AnimatePresence initial={false} exitBeforeEnter={true} onExitComplete={() => null}>\n            {successModalOpen && (\n              <CustomDialog modalOpen={successModalOpen} handleClose={handleCloseSuccessModal}>\n                <img src=\"/static/img/success-check.svg\" alt=\"\" style={{ width: '3rem', marginBottom: '1rem' }} />\n\n                <h2 className=\"text-center\">Buy Success!</h2>\n                <h6 className=\"text-center\">\n\n                  {tx ? (\n                    <>\n                      Tx:{' '}\n                      <a\n                        href={`https://sepolia.etherscan.io/tx/${tx}`}\n                        target=\"_blank\"\n                      >\n                        {shortenTransactionHash(tx)}\n                      </a>\n                    </>\n                  ) : (\n                    ''\n                  )}\n                </h6>\n\n                <div className=\"d-flex flex-wrap flex-row justify-content-center mt-3\">\n                  <button className=\"button-outline m-2 purple-fill\" onClick={handleCloseSuccessModal}>\n                    Alright!\n                  </button>\n                </div>\n              </CustomDialog>\n            )}\n          </AnimatePresence>\n        </>\n      }\n    </>\n  );\n}\n\n","import './App.css';\n\nimport { HashRouter as Router, Link, Route, Routes } from 'react-router-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { DAppProvider, BSC, Sepolia, Mainnet } from '@usedapp/core';\n// Components\nimport Header from './components/Layouts/Header';\n\n// Pages\n// import HomePage from './components/Pages/HomePage';\nimport PublicRoundPage from './components/Pages/PublicRoundPage/PublicRoundPage';\nimport XirtamPage from './components/Pages/PublicRoundPage/XirtamPage';\n\nconst helmetContext = {};\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10);\n\nconst config = {\n  readOnlyChainId: chainId,\n  readOnlyUrls: {\n    [chainId]: process.env.REACT_APP_RPC_URL\n  },\n  networks: [Sepolia],\n  pollingInterval: 12000\n};\n\nfunction App() {\n  return (\n    <>\n      <DAppProvider config={config}>\n        <HelmetProvider context={helmetContext}>\n          <Router>\n            <Header />\n            <div className=\"background\">\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n            \n            <div className=\"pages\">\n              <Routes>\n                <Route path=\"/\" exact element={<PublicRoundPage />} />\n\n                {/* PUBLIC Round */}\n                <Route path=\"/xirtam\" element={<XirtamPage />} />\n\n                <Route\n                  path=\"*\"\n                  element={\n                    <main\n                      className=\"d-flex flex-column justify-content-center align-items-center\"\n                      style={{ zIndex: '3', position: 'relative', height: '70vh' }}\n                    >\n                      <div style={{ textAlign: 'center' }}>\n                        <p>There's nothing here!</p>\n                        <Link to=\"/\">\n                          <button className=\"btn purple-fill\">Back to Home</button>\n                        </Link>\n                      </div>\n                    </main>\n                  }\n                />\n              </Routes>\n            </div>\n          </Router>\n        </HelmetProvider>\n      </DAppProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}