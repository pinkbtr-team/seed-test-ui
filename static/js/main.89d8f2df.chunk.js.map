{"version":3,"sources":["connectors/index.js","components/Dialog/Backdrop.js","components/Dialog/CustomDialog.js","components/Layouts/Header.js","components/Form/CheckNFT.js","components/Pages/SeedPage/SeedPage.js","config/index.js","utils/formatNumber.js","components/Pages/SeedPage/XirtamPage.js","App.js","reportWebVitals.js","index.js"],"names":["chainId","parseInt","process","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","_defineProperty","qrcode","pollingInterval","connectorsByName","_connectorsByName","_connectorsNames","Backdrop","props","_jsx","motion","div","className","onClick","initial","opacity","animate","exit","children","dropIn","hidden","y","visible","transition","duration","type","damping","stiffnesss","CustomDialog","_jsxs","_Fragment","Helmet","handleClose","variants","e","stopPropagation","Header","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","walletModalOpen","setWalletModalOpen","_useEthers","useEthers","account","activate","error","_useState5","_useState6","activateError","setActivateError","useEffect","message","handleConnectWallet","value","handleOpenWalletModal","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","id","shortenAddress","src","alt","AnimatePresence","exitBeforeEnter","onExitComplete","modalOpen","style","width","marginInline","concat","SEED_LIST","name","symbol","thumbnail","routes","status","SeedPage","height","minHeight","paddingTop","map","data","i","Link","to","fontSize","XITRAM_SEED_ADDRESS","XITRAM_SEED_INTERFACE","utils","Interface","ETH_SEED_ABI","XITRAM_SEED_CONTRACT","Contract","ETH_DECIMALS","fCRCurrency","number","numeral","format","Number","isInteger","fCRCurrency8","price","price_currency","seed_symbol","actual_price_currency","XirtamPage","successModalOpen","setSuccessModalOpen","handleCloseSuccessModal","saleProgress","setSaleProgress","_useState7","_useState8","getAmount","setGetAmount","_useState9","_useState10","amount","setAmount","_useState11","_useState12","startTime","setStartTime","_useState13","_useState14","endTime","setEndTime","_useState15","_useState16","setStatus","_useState17","_useState18","statusText","setStatusText","_useState19","parseEther","_useState20","setSoftCap","_useState21","_useState22","hardCap","setHardCap","_useState23","_useState24","minBuy","setMinBuy","_useState25","_useState26","maxBuy","setMaxBuy","_useState27","_useState28","totalCollected","setTotalCollected","_useState29","_useState30","totalTokens","setTotalTokens","_useState31","_useState32","claimTokenBalance","setClaimTokenBalance","_useState33","_useState34","buyPrice","setBuyPrice","_useState35","_useState36","isTx","setIsTx","_useState37","_useState38","tx","setTx","contractData","useContractCalls","abi","address","method","args","ethBalance","useEtherBalance","_useState39","_useState40","errorMessage","setErrorMessage","date","Date","toString","dateFormat","progress","mul","parseUnits","formatUnits","_useForm","useForm","defaultValues","register","handleSubmit","setValue","watch","setError","errors","formState","_useState41","_useState42","watchFields","subscription","decimals","split","length","priceInUSD","xtr","formatEther","unsubscribe","console","log","cAmount","_useContractFunction","useContractFunction","transactionName","state","send","_useState43","_useState44","buying","setBuying","transaction","hash","_useState45","_useState46","accessState","setAccessState","_useState47","_useState48","passwordState","setPasswordState","handleAccess","_ref2","requestOptions","redirect","fetch","then","response","text","result","alert","catch","fontWeight","maxWidth","placeholder","onChange","target","minWidth","marginTop","marginBottom","marginLeft","ReactPlaceholder","ready","showLoadingAnimation","toFixed","CProgress","CProgressBar","color","variant","animated","sub","onSubmit","_objectSpread","required","max","min","step","shouldValidate","shouldDirty","preventDefault","undefined","gte","padding","disabled","href","shortenTransactionHash","helmetContext","config","readOnlyChainId","readOnlyUrls","networks","Sepolia","App","DAppProvider","HelmetProvider","context","Router","Routes","Route","path","exact","element","zIndex","position","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89d8f2df.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\n\n/* eslint-disable */\n\nconst POLLING_INTERVAL = 3000;\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10);\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] });\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: process.env.REACT_APP_RPC_URL },\n  qrcode: true,\n  supportedChainIds: [chainId],\n  pollingInterval: POLLING_INTERVAL,\n  chainId: chainId\n});\n\nexport const wallets = ['metamask', 'walletconnect'];\n\nexport const connectorsByName = {\n  ['metamask']: injected,\n  ['walletconnect']: walletconnect\n};\n\nexport const connectorsNames = {\n  ['metamask']: 'Metamask',\n  ['walletconnect']: 'Wallet Connect'\n};\n","import { motion } from 'framer-motion';\n\nconst dropIn = {\n  hidden: {\n    y: '-100vh',\n    opacity: 0,\n    transition: {\n      duration: 0.3,\n      type: 'spring',\n      damping: 25,\n      stiffnesss: 500\n    }\n  },\n  visible: {\n    y: '0',\n    opacity: 1\n  },\n  exit: {\n    y: '100vh',\n    opacity: 0\n  }\n};\n\nconst Backdrop = (props) => {\n  return (\n    <motion.div\n      className=\"dialog-backdrop\"\n      onClick={props.onClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      {props.children}\n    </motion.div>\n  );\n};\n\nexport default Backdrop;\n","import { motion } from 'framer-motion';\nimport { Helmet } from 'react-helmet-async';\nimport Backdrop from './Backdrop';\n\nconst dropIn = {\n  hidden: {\n    y: '-50vh',\n    opacity: 0\n  },\n  visible: {\n    y: '0',\n    opacity: 1,\n    transition: {\n      duration: 1,\n      type: 'spring',\n      damping: 15,\n      stiffnesss: 300\n    }\n  },\n  exit: {\n    y: '50vh',\n    opacity: 0\n  }\n};\n\nconst CustomDialog = (props) => {\n  return (\n    <>\n      <Helmet>\n        <style>{'body { overflow-y: hidden; }'}</style>\n      </Helmet>\n\n      <Backdrop onClick={props.handleClose}>\n        <motion.div\n          variants={dropIn}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"exit\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n          className=\"dialog-modal\"\n        >\n          {props.children}\n        </motion.div>\n      </Backdrop>\n    </>\n  );\n};\n\nexport default CustomDialog;\n","import { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useEthers, shortenAddress } from '@usedapp/core';\nimport { wallets, connectorsByName, connectorsNames } from '../../connectors';\n// components\nimport CustomDialog from '../Dialog/CustomDialog';\n\nconst Header = (props) => {\n  const [connectedState, setConnectedState] = useState(false);\n\n  const [walletModalOpen, setWalletModalOpen] = useState(false);\n\n  const { account, activate } = useEthers();\n\n  const { error } = useEthers();\n\n  const [activateError, setActivateError] = useState('');\n\n  useEffect(() => {\n    if (error) {\n      setActivateError(error.message);\n    }\n  }, [error]);\n\n  const handleConnectWallet = (value) => {\n    activate(connectorsByName[value]);\n    setActivateError('');\n    setWalletModalOpen(false);\n  };\n\n  const handleOpenWalletModal = async () => {\n    setActivateError('');\n    setWalletModalOpen(true);\n  };\n\n  const handleCloseWalletModal = () => {\n    setWalletModalOpen(false);\n  };\n\n  return (\n    <>\n      <div className=\"header-wrapper\">\n        {!account ? (\n          <button\n            onClick={handleOpenWalletModal}\n            className=\"connect-wallet-btn unconnected color-purple pe-all\"\n            id=\"wallet-unconnected\"\n          >\n            <img src=\"/static/img/wallet.svg\" alt=\"\" className=\"wallet-icon\" />\n            {activateError ? <span>{activateError}</span> : <span>Connect Wallet</span>}\n          </button>\n        ) : (\n          <button\n            onClick={handleOpenWalletModal}\n            className=\"connect-wallet-btn connected color-green pe-all\"\n            id=\"wallet-unconnected\"\n          >\n            Connected ({shortenAddress(account)})\n          </button>\n        )}\n      </div>\n\n      <AnimatePresence initial={false} exitBeforeEnter={true} onExitComplete={() => null}>\n        {walletModalOpen && (\n          <CustomDialog modalOpen={walletModalOpen} handleClose={handleCloseWalletModal}>\n            <h2 className=\"text-center mt-3\">Connect Wallet</h2>\n\n            <div\n              className=\"d-flex flex-wrap flex-column align-items-center mt-3 mb-3\"\n              style={{ width: '90%', marginInline: 'auto' }}\n            >\n              <h6>Connect with</h6>\n\n              <button\n                className=\"choose-wallet-btn m-2\"\n                value=\"metamask\"\n                onClick={() => handleConnectWallet('metamask')}\n              >\n                <img src=\"/static/img/metamask.jpg\" alt=\"\" className=\"wallet-logo\" />\n                Metamask\n              </button>\n\n              <button\n                className=\"choose-wallet-btn m-2\"\n                value=\"walletConnect\"\n                onClick={() => handleConnectWallet('walletconnect')}\n              >\n                <img src=\"/static/img/walletconnect.jpg\" alt=\"\" className=\"wallet-logo\" />\n                <span>WalletConnect</span>\n              </button>\n\n\n              {/*<button className=\"choose-wallet-btn m-2\" value=\"Binance\" onClick={handleConnectWallet}>\n                                <img src=\"/static/img/binance.jpg\" alt=\"\" className=\"wallet-logo\" />\n                                Binance\n                            </button> \n                            */}\n            </div>\n          </CustomDialog>\n        )}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport default Header;\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { shortenAddress } from '@usedapp/core';\nimport { motion } from 'framer-motion';\n\nconst NFTSeries = [\n  {\n    value: '0x685B1ded8013785d6623CC18D214320b6Bb64759',\n    label: `Pincubator WAAB Series (${shortenAddress('0x685B1ded8013785d6623CC18D214320b6Bb64759')})`\n  },\n  {\n    value: '0x685B1ded8013785d6623CC18D214320b6Bb64759',\n    label: `Pincubator WAAB Series (${shortenAddress('0x685B1ded8013785d6623CC18D214320b6Bb64759')})`\n  },\n  {\n    value: '0x685B1ded8013785d6623CC18D214320b6Bb64759',\n    label: `Pincubator WAAB Series (${shortenAddress('0x685B1ded8013785d6623CC18D214320b6Bb64759')})`\n  }\n];\n\nconst CheckNFT = (props) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm();\n  const [result, setResult] = useState('');\n\n  const handleCheckNFTSubmit = (data) => {\n    setResult(JSON.stringify(data));\n    alert(`NFT CHECK: ${JSON.stringify(data)}`);\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: '-20vh' }}\n      animate={{ opacity: 1, y: '0' }}\n      exit={{ opacity: 0 }}\n      transition={{ duration: 1, type: 'spring' }}\n      className=\"container pt-5 d-flex flex-column justify-content-center align-items-center\"\n      style={{ height: '100%', minHeight: '90vh' }}\n    >\n      <h2>Check Pincubator NFT</h2>\n      <form className=\"checkNFT-form\" onSubmit={handleSubmit((data) => handleCheckNFTSubmit(data))}>\n        <select {...register('nftseries', { required: true })} className=\"form-select purple-input\">\n          {NFTSeries.map((data, i) => {\n            return (\n              <option key={i} value={data.value}>\n                {data.label}\n              </option>\n            );\n          })}\n        </select>\n\n        <input\n          {...register('tokenid', { required: true })}\n          className=\"form-control mt-2 purple-input\"\n          type=\"number\"\n          placeholder=\"Your token ID\"\n        />\n        {errors.tokenid && <span className=\"invalid-danger\">This field is required</span>}\n\n        <button className=\"button-outline mt-5 w-100 purple-fill\" type=\"submit\" value=\"submit\">\n          CHECK\n        </button>\n      </form>\n\n      {/* <p style={{ lineBreak: 'anywhere' }}>{result}</p> */}\n\n      <button className=\"button-outline mt-5\" onClick={props.toHome}>\n        Go Back\n      </button>\n    </motion.div>\n  );\n};\n\nexport default CheckNFT;\n","import '../../styling/seed.css';\nimport { m, motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\n\nconst SEED_LIST = [\n  {\n    name: 'XIRTAM',\n    symbol: 'XIRTAM',\n    thumbnail: '/static/seed/XIRTAM/thumbnail.jpg',\n    routes: 'xirtam',\n    status: '17 April 2023'\n  }\n];\n\nconst SeedPage = () => {\n  return (\n    <>\n      <section>\n        <motion.div\n          initial={{ opacity: 0, y: '-20vh' }}\n          animate={{ opacity: 1, y: '0' }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 1, type: 'spring' }}\n          className=\"container d-flex flex-column\"\n          style={{ height: '100%', minHeight: '98vh', paddingTop: '6rem' }}\n        >\n          {/* <Link to=\"/\">\n                        <button className=\"button-outline mb-3\">Go Back</button>\n              </Link>\n          */}\n\n          <h1>Pincubator Seed</h1>\n\n          <div className=\"row\">\n            {SEED_LIST.map((data, i) => {\n              return (\n                <div className=\"col-12 col-md-6 col-lg-3 p-2\" key={i}>\n                  <Link to={`/${data.routes}`}>\n                    <div className=\"SeedList\">\n                      <div className=\"SeedList-thumbnail\">\n                        <img className=\"SeedList-thumbnail-img\" src={data.thumbnail} alt=\"\" />\n                      </div>\n                      <div className=\"SeedList-detail\">\n                        <h3 className=\"SeedList-symbol\">${data.symbol}</h3>\n                        <h6 className=\"SeedList-name\">{data.name}</h6>\n\n                        <div style={{ fontSize: '0.6rem'}}>\n                          <span>{data.status}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </Link>\n                </div>\n              );\n            })}\n          </div>\n        </motion.div>\n      </section>\n    </>\n  );\n};\n\nexport default SeedPage;\n","import { Contract, utils } from 'ethers';\n\n\nimport ETH_SEED_ABI from '../abi/ETHSeedSale.json';\n\n// SHAZU\nexport const XITRAM_SEED_ADDRESS = '0x51E2832582c3d0f7fd6474B034e24A3a81020315'\nexport const XITRAM_SEED_INTERFACE = new utils.Interface(ETH_SEED_ABI)\nexport const XITRAM_SEED_CONTRACT = new Contract(XITRAM_SEED_ADDRESS, ETH_SEED_ABI)\nexport const ETH_DECIMALS = 18","import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '$00' : '$0.00');\n}\n\nexport function fCRCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '0,0' : '0,0.00');\n}\n\n\nexport function fCRCurrency8(number) {\n    return numeral(number).format(Number.isInteger(number) ? '0000' : '0.00000000');\n  }\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","import { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { CProgress, CProgressBar } from '@coreui/react';\nimport { Ether, Hardhat, shortenTransactionHash, useBlockNumber } from '@usedapp/core';\nimport { utils } from 'ethers';\nimport CustomDialog from '../../Dialog/CustomDialog';\nimport ClaimButton from '../../Form/ClaimButton';\nimport { Link } from 'react-router-dom';\n\nimport { useEthers, shortenAddress, useContractFunction, useContractCalls, useEtherBalance } from '@usedapp/core';\nimport { XITRAM_SEED_ADDRESS, XITRAM_SEED_CONTRACT, XITRAM_SEED_INTERFACE, USDC_ADDRESS, USDC_CONTRACT, ETH_DECIMALS } from '../../../config';\nimport { fCRCurrency, fCRCurrency8 } from '../../../utils/formatNumber';\nimport ReactPlaceholder from 'react-placeholder';\nimport \"react-placeholder/lib/reactPlaceholder.css\"\nimport dateFormat from \"dateformat\";\n\nconst price = 1 / 0.0125;\nconst price_currency = 'USD';\nconst seed_symbol = 'XIRTAM';\n\nconst actual_price_currency = 'ETH'\n\nexport default function XirtamPage() {\n  const { account } = useEthers();\n\n  // SUCCESS DIALOG\n  const [successModalOpen, setSuccessModalOpen] = useState(false);\n  const [successClaimModalOpen, setSuccessClaimModalOpen] = useState(false);\n\n  const handleCloseSuccessModal = () => {\n    setSuccessModalOpen(false);\n  };\n\n  const handleCloseSuccessClaimModal = () => {\n    setSuccessClaimModalOpen(false);\n  }\n\n  // SALE\n  const [saleProgress, setSaleProgress] = useState(0);\n  const [getAmount, setGetAmount] = useState(\"0\");\n\n  const [amount, setAmount] = useState(\"0.01\")\n\n  const [startTime, setStartTime] = useState(0)\n  const [endTime, setEndTime] = useState(0)\n  const [status, setStatus] = useState(0)\n  const [statusText, setStatusText] = useState('')\n  const [softCap, setSoftCap] = useState(utils.parseEther('0'))\n  const [hardCap, setHardCap] = useState(utils.parseEther('0'))\n  const [minBuy, setMinBuy] = useState(utils.parseEther('0'))\n  const [maxBuy, setMaxBuy] = useState(utils.parseEther('0'))\n  const [totalCollected, setTotalCollected] = useState(utils.parseEther('0'))\n  const [totalTokens, setTotalTokens] = useState(utils.parseEther('0'))\n  const [claimTokenBalance, setClaimTokenBalance] = useState(utils.parseEther('0'))\n\n  const [buyPrice, setBuyPrice] = useState(utils.parseEther('0'))\n\n  const [isTx, setIsTx] = useState(false)\n  const [tx, setTx] = useState('')\n\n  const contractData = useContractCalls([\n    {\n      abi: XITRAM_SEED_INTERFACE,\n      address: XITRAM_SEED_ADDRESS,\n      method: 'startTime',\n      args: []\n    },\n    {\n      abi: XITRAM_SEED_INTERFACE,\n      address: XITRAM_SEED_ADDRESS,\n      method: 'endTime',\n      args: []\n    },\n    {\n      abi: XITRAM_SEED_INTERFACE,\n      address: XITRAM_SEED_ADDRESS,\n      method: 'status',\n      args: []\n    },\n    {\n      abi: XITRAM_SEED_INTERFACE,\n      address: XITRAM_SEED_ADDRESS,\n      method: 'SOFTCAP',\n      args: []\n    },\n    {\n      abi: XITRAM_SEED_INTERFACE,\n      address: XITRAM_SEED_ADDRESS,\n      method: 'HARDCAP',\n      args: []\n    },\n    {\n      abi: XITRAM_SEED_INTERFACE,\n      address: XITRAM_SEED_ADDRESS,\n      method: 'MIN_ETH_PER_WALLET',\n      args: []\n    },\n    {\n      abi: XITRAM_SEED_INTERFACE,\n      address: XITRAM_SEED_ADDRESS,\n      method: 'MAX_ETH_PER_WALLET',\n      args: []\n    },\n    {\n      abi: XITRAM_SEED_INTERFACE,\n      address: XITRAM_SEED_ADDRESS,\n      method: 'totalCollected',\n      args: []\n    },\n    {\n      abi: XITRAM_SEED_INTERFACE,\n      address: XITRAM_SEED_ADDRESS,\n      method: 'participants',\n      args: [account]\n    },\n    {\n      abi: XITRAM_SEED_INTERFACE,\n      address: XITRAM_SEED_ADDRESS,\n      method: 'getLatestPrice',\n      args: []\n    },\n    {\n      abi: XITRAM_SEED_INTERFACE,\n      address: XITRAM_SEED_ADDRESS,\n      method: 'getTokenAmount',\n      args: [account]\n    }\n  ]);\n\n\n  const ethBalance = useEtherBalance(account)\n\n  const [errorMessage, setErrorMessage] = useState(0)\n\n  useEffect(() => {\n    if (contractData[0]) {\n\n      var date = new Date(contractData[0].toString() * 1000);\n\n      setStartTime(dateFormat(date, 'mmmm dS, yyyy, HH:MM:ss'))\n    }\n\n    if (contractData[1]) {\n      var date = new Date(contractData[1].toString() * 1000);\n\n      setEndTime(dateFormat(date, 'mmmm dS, yyyy, HH:MM:ss'))\n    }\n\n    if (contractData[2]) {\n      setStatus(contractData[2]);\n\n      if (contractData[2] == 0) {\n        setStatusText('Scheduled')\n      }\n\n      if (contractData[2] == 1) {\n        setStatusText('Active')\n      }\n\n      if (contractData[2] == 2) {\n        setStatusText('Closed')\n      }\n\n      if (contractData[2] == 3) {\n        setStatusText('Failed')\n      }\n    }\n\n    if (contractData[3]) {\n      setSoftCap(contractData[3][0]);\n    }\n\n    if (contractData[4]) {\n      setHardCap(contractData[4][0]);\n    }\n\n    if (contractData[5]) {\n      setMinBuy(contractData[5][0]);\n    }\n\n    if (contractData[6]) {\n      setMaxBuy(contractData[6][0]);\n    }\n\n    if (contractData[7]) {\n      setTotalCollected(contractData[7][0]);\n    }\n\n    if (contractData[8]) {\n      setTotalTokens(contractData[8][0]);\n    }\n\n\n    if (contractData[9]) {\n      setBuyPrice(contractData[9][0]);\n    }\n\n    if (contractData[10]) {\n      setClaimTokenBalance(contractData[10][0]);\n    }\n\n\n    if (contractData[4] && contractData[7]) {\n\n      const progress = contractData[7][0].mul(utils.parseUnits('100', 6)).div(contractData[4][0])\n\n      setSaleProgress(Number(utils.formatUnits(progress, 6)))\n    }\n\n  }, [contractData]);\n\n\n\n  useEffect(() => {\n\n    if (isTx) {\n      setSuccessModalOpen(true);\n      setIsTx(false)\n    }\n  }, [totalTokens, tx]);\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    value,\n    setError,\n    watch,\n    formState: { errors }\n  } = useForm({\n    defaultValues: {\n      amount: \"0.01\"\n    }\n  });\n  const [result, setResult] = useState('');\n  const watchFields = watch(['amount']);\n\n  useEffect(() => {\n    const subscription = watch((value, { name, type }) => {\n      const decimals = value.amount.split(\".\")\n\n      if (value.amount == '') {\n        setAmount('0')\n      } else {\n        setAmount(value.amount)\n      }\n\n      if (decimals.length > 1 && decimals[1].length > 18) {\n        setAmount('0')\n      } else {\n        if (value.amount != \"\") {\n          const priceInUSD = utils.parseEther(value.amount.toString()).mul(buyPrice).div(utils.parseUnits(\"1\", 8))\n          const price = utils.parseEther(\"0.0125\")\n\n          const xtr = utils.formatEther(priceInUSD.mul(utils.parseEther(\"1\").div(price)))\n          setGetAmount(xtr);\n        }\n      }\n    });\n\n    setErrorMessage('')\n    return () => subscription.unsubscribe();\n  }, [watchFields]);\n\n\n  console.log(amount)\n  useEffect(() => {\n    let cAmount;\n    if (amount == \"0\") {\n      cAmount = \"0.01\"\n    } else {\n      cAmount = amount\n    }\n    const priceInUSD = utils.parseEther(cAmount.toString()).mul(buyPrice).div(utils.parseUnits(\"1\", 8))\n    const price = utils.parseEther(\"0.0125\")\n\n    const xtr = utils.formatEther(priceInUSD.mul(utils.parseEther(\"1\").div(price)))\n    setGetAmount(xtr);\n\n    const amountBN = utils.parseUnits(amount.toString(), ETH_DECIMALS)\n\n  }, [minBuy, maxBuy]);\n\n  const handleMaxBuy = (e) => {\n    setValue('amount', utils.formatUnits((maxBuy.sub(totalTokens)).toString(), ETH_DECIMALS).toString(), {\n      shouldValidate: true,\n      shouldDirty: true\n    });\n    e.preventDefault();\n  };\n\n  const { state, send } = useContractFunction(XITRAM_SEED_CONTRACT, 'sell', { transactionName: 'Sell Tokens' });\n\n  const [buying, setBuying] = useState(false)\n\n  useEffect(() => {\n\n    if (state.status == 'Exception') {\n      setErrorMessage(state.errorMessage)\n    }\n    if (state.status === 'Exception' || state.status === 'Fail') {\n      setBuying(false)\n      setIsTx(false)\n      setErrorMessage(state.errorMessage)\n    }\n\n    if (state.status === 'None') {\n      setBuying(false)\n      setIsTx(false)\n      setErrorMessage('')\n    }\n\n    if (state.status === 'Success') {\n      setBuying(false)\n      setTx(state.transaction.hash)\n      setIsTx(true)\n      setErrorMessage('')\n    }\n  }, [state]);\n\n  const handleBuySubmit = (data) => {\n    setBuying(true)\n    send({ value: utils.parseUnits(amount.toString(), ETH_DECIMALS).toString() })\n  };\n\n  const onError = (errors, e) => console.log(errors, e);\n\n  // TODO: make it to false later\n  const [accessState, setAccessState] = useState(false);\n  const [passwordState, setPasswordState] = useState('');\n\n  const handleAccess = async () => {\n     var requestOptions = {\n       method: 'GET',\n       redirect: 'follow'\n     };\n\n     fetch(`https://admin.pincubator9059.workers.dev/?passwd=${passwordState}`, requestOptions)\n       .then(response => response.text())\n       .then(result => {\n         if(result === 'VALID'){\n           setAccessState(true);\n         }else{\n           alert(\"INVALID PASSWORD\");\n         }\n       })\n       .catch(error => console.log('error', error));\n  }\n\n  const handlePasswordChange = (e) => {\n    setPasswordState(e.target.value);\n  }\n\n  return (\n    <>\n      {\n        !accessState &&\n        <section className=\"d-flex flex-column justify-content-center align-items-center\" style={{ height: '100vh', width: '100vw' }}>\n          <h3 className=\"text-center\">Input Seed Password for</h3>\n          <h2 style={{ fontWeight: 'bold' }}>${seed_symbol}</h2>\n\n          <input className=\"purple-input form-control\" style={{ maxWidth: '30rem' }} placeholder=\"Password\" value={passwordState} onChange={handlePasswordChange} />\n          <button onClick={handleAccess} className=\"button-outline mt-3\">ACCESS</button>\n        </section>\n      }\n      {\n        accessState &&\n        <>\n          <section className=\"section-dashboard\">\n            <motion.div\n              initial={{ opacity: 0, y: '-20vh' }}\n              animate={{ opacity: 1, y: '0' }}\n              exit={{ opacity: 0 }}\n              transition={{ duration: 1, type: 'spring' }}\n              className=\"container pt-5 d-flex flex-column\"\n              style={{ height: '100%', minHeight: '90vh', paddingTop: '7rem' }}\n            >\n              <Link to=\"/\" className=\"mt-5 mb-3\">\n                <button className=\"button-outline\">Go Back</button>\n              </Link>\n\n              <div className=\"Seed-introduction\">\n                <div className=\"row mb-3\">\n                  <div className=\"col-12 col-lg-8 mb-3\">\n                    <div className=\"d-flex flex-row flex-wrap align-items-center round-purple-border bg-darken Seed-introduction-badge\" style={{ minWidth: '25rem' }}>\n                      <img src={`/static/seed/${seed_symbol}/logo.png`} alt=\"\" className=\"Seed-introduction-logo\" />\n                      <div className=\"d-flex flex-column\">\n                        <h3 className=\"Seed-introduction-name\">{seed_symbol}</h3>\n                        <h6 className=\"m-0\">${seed_symbol}</h6>\n\n                        <div\n                          className=\"white-line\"\n                          style={{ marginTop: '0.5rem', marginBottom: '0.5rem', marginLeft: '0', width: '100%' }}\n                        />\n\n                        <h6 className=\"Seed-introduction-price\">1 {price_currency} = {1 / price} {seed_symbol}</h6>\n                      </div>\n                    </div>\n\n                    <div className=\"mt-3\">\n                      <div className=\"sale-time\">\n                        <p>Network: Ethereum</p>\n                        {statusText ? (\n                          <p>Status: {statusText}</p>\n                        ) : (\n                          ''\n                        )}\n\n                        {startTime && endTime && status < 2 ? (\n                          <p>Sale : {startTime} - {endTime} (local time)</p>\n                        ) : (\n                          ''\n                        )}\n                      </div>\n                      <div className=\"Seed-introduction-desc\">\n                        Welcome to the XIRTAM special seed round! Our project is an exciting opportunity for investors, as we're pegged to the USD and offer a range of investment options.\n                        <br /><br />\n                        Our user interface includes a calculator that shows you the current ETH-to-XIRTAM conversion rate, ensuring that you can make informed investment decisions. We're committed to making investing easy and transparent, which is why our investment range is 0.1 ETH to 1 ETH.\n                        <br /><br />\n                        Furthermore, we'll be airdropping tokens to investors at a later date, providing an added incentive to invest in XIRTAM. If you're looking for a new approach to investment that prioritizes transparency and ease of use, invest in XIRTAM and join us on our journey towards growth and success.\n                        <br /> <br />\n                        The main focus of XIRTAM remains to be a gateway to empower decentralized freedom through the means of collaboration and anonymity to earn rewards. Users will be able to use the Proof of One platform starting at the Beta Test Phase. Through a battery of tests with trivial components, randomized and increasing in difficulty, users will race to complete XIRTAM's digital system that will determine one's reputation, opening pathways for prize pool rewards and incentives.\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-12 col-lg-4\">\n                    <h5>Sale Info</h5>\n\n\n                    <div className=\"Seed-sale-item round-purple-border\">\n                      <h6 className=\"m-1\">\n                        <ReactPlaceholder type=\"textRow\" ready={true} showLoadingAnimation={true}>\n                          {/* <ReactPlaceholder type=\"textRow\" ready={hardCap.toString() > 0} showLoadingAnimation={true}> */}\n                          Hardcap: <span className=\"Seed-sale-item-amount\">{fCRCurrency(utils.formatUnits(hardCap.toString(), ETH_DECIMALS))} {actual_price_currency}</span>\n                        </ReactPlaceholder>\n                      </h6>\n                    </div>\n\n                    <div className=\"Seed-sale-item round-purple-border\">\n                      <h6 className=\"m-1\">\n                        <ReactPlaceholder type=\"textRow\" ready={true} showLoadingAnimation={true}>\n                          {/* <ReactPlaceholder type=\"textRow\" ready={minBuy.toString() > 0} showLoadingAnimation={true}> */}\n                          Min {actual_price_currency} per wallet: <span className=\"Seed-sale-item-amount d-block\">{fCRCurrency(utils.formatUnits(minBuy.toString(), ETH_DECIMALS))} {actual_price_currency}</span>\n                        </ReactPlaceholder>\n                      </h6>\n                    </div>\n\n                    <div className=\"Seed-sale-item round-purple-border\">\n                      <h6 className=\"m-1\">\n                        <ReactPlaceholder type=\"textRow\" ready={true} showLoadingAnimation={true}>\n                          {/* <ReactPlaceholder type=\"textRow\" ready={maxBuy.toString() > 0} showLoadingAnimation={true}> */}\n                          Max {actual_price_currency} per wallet: <span className=\"Seed-sale-item-amount d-block\">{fCRCurrency(utils.formatUnits(maxBuy.toString(), ETH_DECIMALS))} {actual_price_currency}</span>\n                        </ReactPlaceholder>\n                      </h6>\n                    </div>\n                    <div className=\"Seed-sale-item round-purple-border\">\n                      <h6 className=\"m-1\">\n                        <ReactPlaceholder type=\"textRow\" ready={true} showLoadingAnimation={true}>\n                          {/* <ReactPlaceholder type=\"textRow\" ready={totalCollected.toString()} showLoadingAnimation={true}> */}\n                          Total Collected: <span className=\"Seed-sale-item-amount\">{fCRCurrency8(utils.formatUnits(totalCollected.toString(), ETH_DECIMALS))} {actual_price_currency}</span>\n                        </ReactPlaceholder>\n                      </h6>\n                    </div>\n\n                    <div className=\"Seed-sale-item round-purple-border\">\n                      <h6 className=\"m-1\">\n                        <ReactPlaceholder type=\"textRow\" ready={true} showLoadingAnimation={true}>\n                          {/* <ReactPlaceholder type=\"textRow\" ready={maxBuy.toString() > 0} showLoadingAnimation={true}> */}\n                          Current {actual_price_currency} / USD rate: <span className=\"Seed-sale-item-amount d-block\">{utils.formatUnits(buyPrice.toString(), 8)} $</span>\n                        </ReactPlaceholder>\n                      </h6>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mb-5\">\n                <div className=\"col-12 col-lg-8 mb-3\">\n                  <h4 className=\"fw-bold\">Sale</h4>\n                  <div className=\"d-flex flex-column round-purple-border mt-2 bg-darken p-2\">\n                    <div className=\"d-flex flex-row Seed-progress-label mb-1\" style={{ width: '100%' }}>\n                      {/* <div className=\"progress-softcap\">Hardcap: {fCRCurrency(utils.formatUnits(hardCap.toString(), ETH_DECIMALS))} {price_currency}</div> */}\n\n                      <div className=\"progress-percent-container ms-auto\">\n                        {saleProgress.toFixed(2)}%\n                      </div>\n                    </div>\n                    <CProgress className=\"mb-1\">\n                      <CProgressBar color=\"#CCCCCC\" variant=\"striped\" animated value={saleProgress} />\n                    </CProgress>\n\n                    <div\n                      className=\"white-line\"\n                      style={{\n                        marginTop: '0.5rem',\n                        marginBottom: '0.5rem',\n                        marginLeft: '0',\n                        width: '100%',\n                        maxWidth: 'unset'\n                      }}\n                    />\n                    {\n                      status == 1 && account && (maxBuy.sub(totalTokens).toString()) != 0\n                        ? (\n                          <form onSubmit={handleSubmit(handleBuySubmit, onError)}>\n                            <div className=\"d-flex flex-row mt-2\">\n                              <input\n                                {...register('amount', { required: true, max: utils.formatUnits((maxBuy.sub(totalTokens)).toString(), ETH_DECIMALS), min: utils.formatUnits(minBuy.toString(), ETH_DECIMALS) })}\n                                type=\"number\"\n                                step=\"0.000000000000000001\"\n                                className=\"form-control purple-input Seed-buy-amount\"\n                                placeholder=\"Buy amount\"\n                              />\n                              <button onClick={handleMaxBuy} className=\"button-outline purple-fill Seed-max-btn\">\n                                MAX\n                              </button>\n                            </div>\n                            {errors.amount && (\n                              <span className=\"invalid-danger\" style={{ marginTop: '-0.2' }}>\n                                Min: {utils.formatUnits(minBuy.toString(), ETH_DECIMALS)} {price_currency} | Max: {utils.formatUnits((maxBuy.sub(totalTokens)).toString(), ETH_DECIMALS)} {price_currency}\n                              </span>\n                            )}\n\n                            {errorMessage ? (\n                              <span className=\"invalid-danger\" style={{ marginTop: '-0.2' }}>\n                                {errorMessage}\n                              </span>\n                            ) : (\n                              ''\n                            )}\n                            {<div className=\"buy-result\">You'll get ~ {fCRCurrency8(getAmount)} {seed_symbol}</div>}\n\n                            {ethBalance !== undefined && ethBalance.gte(utils.parseUnits(amount)) ? (\n                              <button className=\"button-outline purple-fill mt-4 w-100\" style={{ padding: '0.3rem' }} type=\"submit\" disabled={buying}>\n                                {!buying ? (\n                                  'Buy'\n                                ) : (\n                                  'Buying...'\n                                )}\n                              </button>\n                            ) : (\n                              <span className=\"invalid-danger\" style={{ marginTop: '-0.2' }}>\n                                No {actual_price_currency} available to buy. {ethBalance != undefined ? \"Available \" + fCRCurrency8(utils.formatEther(ethBalance)) :\"\"}\n                              </span>\n                            )}\n\n                          </form>\n                  ) : (\n                    ''\n                  )}\n\n                  { account && ((maxBuy.sub(totalTokens).toString()) == 0) ? (\n                  <div>\n                    <span className=\"invalid-danger\" style={{ marginTop: '-0.2' }}>\n                      Max ETH per wallet has been reached\n                    </span>\n                  </div>\n                  ):(\n                    ''\n                  )}\n                  </div>\n                </div>\n\n                { account ? (\n                <div className=\"col-12 col-lg-4 mb-3\">\n                  <h5>Balance Info</h5>\n\n                  <div className=\"Seed-sale-item round-purple-border\">\n                    <h6 className=\"m-1\">\n                      XITRAM Balance: <span className=\"Seed-sale-item-amount\">\n                        {claimTokenBalance ? (\n                          <ReactPlaceholder type=\"textRow\" ready={claimTokenBalance !== undefined} showLoadingAnimation={true}>\n                          {fCRCurrency8(utils.formatEther((claimTokenBalance)))} XIRTAM\n                          </ReactPlaceholder>\n                        ) : (\n                          '0 VINCI'\n                        )}\n\n                        </span>\n                    </h6>\n                  </div>\n                </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            </motion.div>\n          </section>\n\n          <AnimatePresence initial={false} exitBeforeEnter={true} onExitComplete={() => null}>\n            {successModalOpen && (\n              <CustomDialog modalOpen={successModalOpen} handleClose={handleCloseSuccessModal}>\n                <img src=\"/static/img/success-check.svg\" alt=\"\" style={{ width: '3rem', marginBottom: '1rem' }} />\n\n                <h2 className=\"text-center\">Buy Success!</h2>\n                <h6 className=\"text-center\">\n\n                  {tx ? (\n                    <>\n                      Tx:{' '}\n                      <a\n                        href={`https://sepolia.etherscan.io/tx/${tx}`}\n                        target=\"_blank\"\n                      >\n                        {shortenTransactionHash(tx)}\n                      </a>\n                    </>\n                  ) : (\n                    ''\n                  )}\n                </h6>\n\n                <div className=\"d-flex flex-wrap flex-row justify-content-center mt-3\">\n                  <button className=\"button-outline m-2 purple-fill\" onClick={handleCloseSuccessModal}>\n                    Alright!\n                  </button>\n                </div>\n              </CustomDialog>\n            )}\n          </AnimatePresence>\n        </>\n      }\n\n    </>\n  );\n}\n","import './App.css';\n\nimport { HashRouter as Router, Link, Route, Routes } from 'react-router-dom';\nimport { useLocation } from 'react-router';\nimport { useEffect } from 'react';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { DAppProvider, BSC, Sepolia } from '@usedapp/core';\n// Components\nimport Header from './components/Layouts/Header';\n\n// Pages\nimport HomePage from './components/Pages/HomePage';\nimport SeedPage from './components/Pages/SeedPage/SeedPage';\nimport XirtamPage from './components/Pages/SeedPage/XirtamPage';\n\nconst helmetContext = {};\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10);\n\nconst config = {\n  readOnlyChainId: chainId,\n  readOnlyUrls: {\n    [chainId]: process.env.REACT_APP_RPC_URL\n  },\n  networks: [Sepolia],\n  pollingInterval: 3000\n};\n\nfunction App() {\n  return (\n    <>\n      <DAppProvider config={config}>\n        <HelmetProvider context={helmetContext}>\n          <Router>\n            <Header />\n            <div className=\"background\">\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n            <div className=\"pages\">\n              <Routes>\n                {/*<Route exact path=\"/\" element={<HomePage />}/>*/}\n\n                {/* SEED */}\n                <Route path=\"/\" exact element={<SeedPage />} />\n                <Route path=\"/xirtam\" element={<XirtamPage />} />\n\n                <Route\n                  path=\"*\"\n                  element={\n                    <main\n                      className=\"d-flex flex-column justify-content-center align-items-center\"\n                      style={{ zIndex: '3', position: 'relative', height: '70vh' }}\n                    >\n                      <div>\n                        <p>There's nothing here!</p>\n                        <Link to=\"/\">\n                          <button className=\"bubbly-button\">Back to Home</button>\n                        </Link>\n                      </div>\n                    </main>\n                  }\n                />\n              </Routes>\n            </div>\n          </Router>\n        </HelmetProvider>\n      </DAppProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}