{"version":3,"sources":["connectors/index.js","components/Dialog/Backdrop.js","components/Dialog/CustomDialog.js","components/Layouts/Header.js","components/Form/CheckNFT.js","components/Pages/SeedPage/SeedPage.js","config/index.js","utils/formatNumber.js","components/Form/ClaimButton.js","components/Pages/SeedPage/ShazuPage.js","App.js","reportWebVitals.js","index.js"],"names":["chainId","parseInt","process","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","pollingInterval","connectorsByName","Backdrop","props","motion","div","className","onClick","initial","opacity","animate","exit","children","dropIn","hidden","y","visible","transition","duration","type","damping","stiffnesss","CustomDialog","handleClose","variants","e","stopPropagation","Header","useState","walletModalOpen","setWalletModalOpen","useEthers","account","activate","error","activateError","setActivateError","useEffect","message","handleConnectWallet","value","handleOpenWalletModal","a","id","shortenAddress","src","alt","AnimatePresence","exitBeforeEnter","onExitComplete","modalOpen","style","width","marginInline","SEED_LIST","name","symbol","thumbnail","routes","SeedPage","height","minHeight","paddingTop","map","data","i","to","VINCI_SEED_ADDRESS","SHAZU_SEED_ADDRESS","utils","Interface","VINCI_SEED_ABI","Contract","SHAZU_SEED_INTERFACE","BNB_SEED_ABI","SHAZU_SEED_CONTRACT","BNB_DECIMALS","USDC_ADDRESS","ERC20_ABI","fCRCurrency","number","numeral","format","Number","isInteger","ApproveButton","claiming","setClaiming","useContractFunction","transactionName","state","send","status","setTx","transaction","hash","setTokenBalance","tokenBalance","handleClaim","padding","disabled","price_currency","seed_symbol","VinciPage","successModalOpen","setSuccessModalOpen","successClaimModalOpen","setSuccessClaimModalOpen","handleCloseSuccessModal","handleCloseSuccessClaimModal","saleProgress","setSaleProgress","getAmount","setGetAmount","amount","setAmount","startTime","setStartTime","endTime","setEndTime","setStatus","statusText","setStatusText","parseEther","softCap","setSoftCap","hardCap","setHardCap","minBuy","setMinBuy","maxBuy","setMaxBuy","totalCollected","setTotalCollected","totalTokens","setTotalTokens","userTokenBalance","setUserTokenBalance","claimTokenBalance","setClaimTokenBalance","claimStatus","setClaimStatus","setBuyPrice","isTx","setIsTx","tx","contractData","useContractCalls","abi","address","method","args","bnbBalance","useEtherBalance","errorMessage","setErrorMessage","date","Date","toString","dateFormat","progress","mul","parseUnits","formatUnits","useForm","register","handleSubmit","setValue","watch","setError","errors","formState","watchFields","subscription","decimals","split","length","unsubscribe","shouldValidate","shouldDirty","gt","sub","buying","setBuying","accessState","setAccessState","passwordState","setPasswordState","handleAccess","requestOptions","redirect","fetch","then","response","text","result","alert","catch","console","log","fontWeight","maxWidth","placeholder","onChange","target","minWidth","marginTop","marginBottom","marginLeft","ready","showLoadingAnimation","toFixed","color","variant","animated","onSubmit","required","max","min","step","preventDefault","undefined","gte","formatEther","href","shortenTransactionHash","helmetContext","config","readOnlyChainId","readOnlyUrls","networks","Polygon","Mumbai","App","DAppProvider","context","path","exact","element","zIndex","position","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e25f73f2.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\n\n/* eslint-disable */\n\nconst POLLING_INTERVAL = 3000;\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10);\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] });\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: process.env.REACT_APP_RPC_URL },\n  qrcode: true,\n  supportedChainIds: [chainId],\n  pollingInterval: POLLING_INTERVAL,\n  chainId: chainId\n});\n\nexport const wallets = ['metamask', 'walletconnect'];\n\nexport const connectorsByName = {\n  ['metamask']: injected,\n  ['walletconnect']: walletconnect\n};\n\nexport const connectorsNames = {\n  ['metamask']: 'Metamask',\n  ['walletconnect']: 'Wallet Connect'\n};\n","import { motion } from 'framer-motion';\n\nconst dropIn = {\n  hidden: {\n    y: '-100vh',\n    opacity: 0,\n    transition: {\n      duration: 0.3,\n      type: 'spring',\n      damping: 25,\n      stiffnesss: 500\n    }\n  },\n  visible: {\n    y: '0',\n    opacity: 1\n  },\n  exit: {\n    y: '100vh',\n    opacity: 0\n  }\n};\n\nconst Backdrop = (props) => {\n  return (\n    <motion.div\n      className=\"dialog-backdrop\"\n      onClick={props.onClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      {props.children}\n    </motion.div>\n  );\n};\n\nexport default Backdrop;\n","import { motion } from 'framer-motion';\nimport { Helmet } from 'react-helmet-async';\nimport Backdrop from './Backdrop';\n\nconst dropIn = {\n  hidden: {\n    y: '-50vh',\n    opacity: 0\n  },\n  visible: {\n    y: '0',\n    opacity: 1,\n    transition: {\n      duration: 1,\n      type: 'spring',\n      damping: 15,\n      stiffnesss: 300\n    }\n  },\n  exit: {\n    y: '50vh',\n    opacity: 0\n  }\n};\n\nconst CustomDialog = (props) => {\n  return (\n    <>\n      <Helmet>\n        <style>{'body { overflow-y: hidden; }'}</style>\n      </Helmet>\n\n      <Backdrop onClick={props.handleClose}>\n        <motion.div\n          variants={dropIn}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"exit\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n          className=\"dialog-modal\"\n        >\n          {props.children}\n        </motion.div>\n      </Backdrop>\n    </>\n  );\n};\n\nexport default CustomDialog;\n","import { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useEthers, shortenAddress } from '@usedapp/core';\nimport { wallets, connectorsByName, connectorsNames } from '../../connectors';\n// components\nimport CustomDialog from '../Dialog/CustomDialog';\n\nconst Header = (props) => {\n  const [connectedState, setConnectedState] = useState(false);\n\n  const [walletModalOpen, setWalletModalOpen] = useState(false);\n\n  const { account, activate } = useEthers();\n\n  const { error } = useEthers();\n\n  const [activateError, setActivateError] = useState('');\n\n  useEffect(() => {\n    if (error) {\n      setActivateError(error.message);\n    }\n  }, [error]);\n\n  const handleConnectWallet = (value) => {\n    activate(connectorsByName[value]);\n    setActivateError('');\n    setWalletModalOpen(false);\n  };\n\n  const handleOpenWalletModal = async () => {\n    setActivateError('');\n    setWalletModalOpen(true);\n  };\n\n  const handleCloseWalletModal = () => {\n    setWalletModalOpen(false);\n  };\n\n  return (\n    <>\n      <div className=\"header-wrapper\">\n        {!account ? (\n          <button\n            onClick={handleOpenWalletModal}\n            className=\"connect-wallet-btn unconnected color-purple pe-all\"\n            id=\"wallet-unconnected\"\n          >\n            <img src=\"/static/img/wallet.svg\" alt=\"\" className=\"wallet-icon\" />\n            {activateError ? <span>{activateError}</span> : <span>Connect Wallet</span>}\n          </button>\n        ) : (\n          <button\n            onClick={handleOpenWalletModal}\n            className=\"connect-wallet-btn connected color-green pe-all\"\n            id=\"wallet-unconnected\"\n          >\n            Connected ({shortenAddress(account)})\n          </button>\n        )}\n      </div>\n\n      <AnimatePresence initial={false} exitBeforeEnter={true} onExitComplete={() => null}>\n        {walletModalOpen && (\n          <CustomDialog modalOpen={walletModalOpen} handleClose={handleCloseWalletModal}>\n            <h2 className=\"text-center mt-3\">Connect Wallet</h2>\n\n            <div\n              className=\"d-flex flex-wrap flex-column align-items-center mt-3 mb-3\"\n              style={{ width: '90%', marginInline: 'auto' }}\n            >\n              <h6>Connect with</h6>\n\n              <button\n                className=\"choose-wallet-btn m-2\"\n                value=\"metamask\"\n                onClick={() => handleConnectWallet('metamask')}\n              >\n                <img src=\"/static/img/metamask.jpg\" alt=\"\" className=\"wallet-logo\" />\n                Metamask\n              </button>\n\n              <button\n                className=\"choose-wallet-btn m-2\"\n                value=\"walletConnect\"\n                onClick={() => handleConnectWallet('walletconnect')}\n              >\n                <img src=\"/static/img/walletconnect.jpg\" alt=\"\" className=\"wallet-logo\" />\n                <span>WalletConnect</span>\n              </button>\n\n\n              {/*<button className=\"choose-wallet-btn m-2\" value=\"Binance\" onClick={handleConnectWallet}>\n                                <img src=\"/static/img/binance.jpg\" alt=\"\" className=\"wallet-logo\" />\n                                Binance\n                            </button> \n                            */}\n            </div>\n          </CustomDialog>\n        )}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport default Header;\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { shortenAddress } from '@usedapp/core';\nimport { motion } from 'framer-motion';\n\nconst NFTSeries = [\n  {\n    value: '0x685B1ded8013785d6623CC18D214320b6Bb64759',\n    label: `Pincubator WAAB Series (${shortenAddress('0x685B1ded8013785d6623CC18D214320b6Bb64759')})`\n  },\n  {\n    value: '0x685B1ded8013785d6623CC18D214320b6Bb64759',\n    label: `Pincubator WAAB Series (${shortenAddress('0x685B1ded8013785d6623CC18D214320b6Bb64759')})`\n  },\n  {\n    value: '0x685B1ded8013785d6623CC18D214320b6Bb64759',\n    label: `Pincubator WAAB Series (${shortenAddress('0x685B1ded8013785d6623CC18D214320b6Bb64759')})`\n  }\n];\n\nconst CheckNFT = (props) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm();\n  const [result, setResult] = useState('');\n\n  const handleCheckNFTSubmit = (data) => {\n    setResult(JSON.stringify(data));\n    alert(`NFT CHECK: ${JSON.stringify(data)}`);\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: '-20vh' }}\n      animate={{ opacity: 1, y: '0' }}\n      exit={{ opacity: 0 }}\n      transition={{ duration: 1, type: 'spring' }}\n      className=\"container pt-5 d-flex flex-column justify-content-center align-items-center\"\n      style={{ height: '100%', minHeight: '90vh' }}\n    >\n      <h2>Check Pincubator NFT</h2>\n      <form className=\"checkNFT-form\" onSubmit={handleSubmit((data) => handleCheckNFTSubmit(data))}>\n        <select {...register('nftseries', { required: true })} className=\"form-select purple-input\">\n          {NFTSeries.map((data, i) => {\n            return (\n              <option key={i} value={data.value}>\n                {data.label}\n              </option>\n            );\n          })}\n        </select>\n\n        <input\n          {...register('tokenid', { required: true })}\n          className=\"form-control mt-2 purple-input\"\n          type=\"number\"\n          placeholder=\"Your token ID\"\n        />\n        {errors.tokenid && <span className=\"invalid-danger\">This field is required</span>}\n\n        <button className=\"button-outline mt-5 w-100 purple-fill\" type=\"submit\" value=\"submit\">\n          CHECK\n        </button>\n      </form>\n\n      {/* <p style={{ lineBreak: 'anywhere' }}>{result}</p> */}\n\n      <button className=\"button-outline mt-5\" onClick={props.toHome}>\n        Go Back\n      </button>\n    </motion.div>\n  );\n};\n\nexport default CheckNFT;\n","import '../../styling/seed.css';\nimport { m, motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\n\nconst SEED_LIST = [\n  {\n    name: 'Digital Renaissance',\n    symbol: 'VINCI',\n    thumbnail: '/static/seed/VINCI/thumbnail.jpg',\n    routes: 'vinci'\n  },\n  {\n    name: 'SHAZU',\n    symbol: 'SHAZU',\n    thumbnail: '/static/seed/SHAZU/thumbnail.jpg',\n    routes: 'shazu'\n  }\n];\n\nconst SeedPage = () => {\n  return (\n    <>\n      <section>\n        <motion.div\n          initial={{ opacity: 0, y: '-20vh' }}\n          animate={{ opacity: 1, y: '0' }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 1, type: 'spring' }}\n          className=\"container d-flex flex-column\"\n          style={{ height: '100%', minHeight: '98vh', paddingTop: '6rem' }}\n        >\n          {/* <Link to=\"/\">\n                        <button className=\"button-outline mb-3\">Go Back</button>\n                    </Link>\n                    */}\n\n          <h1>Pincubator Seed</h1>\n\n          <div className=\"row\">\n            {SEED_LIST.map((data, i) => {\n              return (\n                <div className=\"col-12 col-md-6 col-lg-3 p-2\" key={i}>\n                  <Link to={`/${data.routes}`}>\n                    <div className=\"SeedList\">\n                      <div className=\"SeedList-thumbnail\">\n                        <img className=\"SeedList-thumbnail-img\" src={data.thumbnail} alt=\"\" />\n                      </div>\n                      <div className=\"SeedList-detail\">\n                        <h3 className=\"SeedList-symbol\">${data.symbol}</h3>\n                        <h6 className=\"SeedList-name\">{data.name}</h6>\n                      </div>\n                    </div>\n                  </Link>\n                </div>\n              );\n            })}\n          </div>\n        </motion.div>\n      </section>\n    </>\n  );\n};\n\nexport default SeedPage;\n","import { Contract, utils } from 'ethers';\nimport VINCI_SEED_ABI from '../abi/SeedSale.json';\n\nimport BNB_SEED_ABI from '../abi/BNBSeedSale.json';\n\nimport ERC20_ABI from '../abi/ERC20.json';\nexport const VINCI_SEED_ADDRESS = '0x42bD26e376C2D9804923C32f5b2861e1b20E6fd9'\nexport const VINCI_SEED_INTERFACE = new utils.Interface(VINCI_SEED_ABI)\nexport const VINCI_SEED_CONTRACT = new Contract(VINCI_SEED_ADDRESS, VINCI_SEED_ABI)\n\n\n\nexport const SHAZU_SEED_ADDRESS = '0x5B4cEeB6745A8335276be1F932db08CC7c9e8814'\nexport const SHAZU_SEED_INTERFACE = new utils.Interface(BNB_SEED_ABI)\nexport const SHAZU_SEED_CONTRACT = new Contract(SHAZU_SEED_ADDRESS, BNB_SEED_ABI)\nexport const BNB_DECIMALS = 18\n\nexport const USDC_ADDRESS = '0x2791bca1f2de4661ed88a30c99a7a9449aa84174'\nexport const USDC_INTERFACE = new utils.Interface(ERC20_ABI)\nexport const USDC_CONTRACT = new Contract(USDC_ADDRESS, ERC20_ABI)\nexport const USDC_DECIMALS = 6\n","import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '$00' : '$0.00');\n}\n\nexport function fCRCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '0000' : '0.00');\n}\n\n\nexport function fCRCurrency18(number) {\n    return numeral(number).format(Number.isInteger(number) ? '0000' : '0 0.0000000000000000000');\n  }\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","import { useEffect, useState } from 'react';\nimport { useContractFunction, useEthers} from '@usedapp/core';\nimport { SHAZU_SEED_CONTRACT} from '../../config';\n\n\nexport default function ApproveButton(props) {\n    const { account } = useEthers();\n\n    const [claiming, setClaiming] = useState(false)\n\n    const { state, send } = useContractFunction(SHAZU_SEED_CONTRACT, 'claim', { transactionName: 'Claim Tokens' });\n\n    const handleClaim = () => {\n        setClaiming(true)\n        send()\n    }\n\n    const handleAfterClaim = () => {\n        props.setTokenBalance(props.tokenBalance)\n        props.handleClaim()\n    }\n\n    useEffect(() => {\n        if (state.status === 'Exception' || state.status === 'Fail') {\n            setClaiming(false)\n        }\n    \n        if (state.status === 'None') {\n            setClaiming(false)\n        }\n    \n        if (state.status === 'Success') {\n            setClaiming(false)\n            props.setTx(state.transaction.hash)\n            handleAfterClaim()\n        }\n    }, [state]);\n\n    return (\n        <>\n            <button className=\"button-outline-green mt-4 w-100\" onClick={handleClaim} style={{ padding: '0.3rem' }} disabled={claiming}>\n                {!claiming ? (\n                'Claim'\n                ): (\n                'Claiming...'\n                )}\n            </button>\n        </>\n    )\n}","import { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { CProgress, CProgressBar } from '@coreui/react';\nimport { Ether, Hardhat, shortenTransactionHash, useBlockNumber } from '@usedapp/core';\nimport { utils } from 'ethers';\nimport CustomDialog from '../../Dialog/CustomDialog';\nimport ClaimButton from '../../Form/ClaimButton';\nimport { Link } from 'react-router-dom';\n\nimport { useEthers, shortenAddress, useContractFunction, useContractCalls, useEtherBalance } from '@usedapp/core';\nimport { SHAZU_SEED_ADDRESS, SHAZU_SEED_CONTRACT, SHAZU_SEED_INTERFACE, USDC_ADDRESS, USDC_CONTRACT, BNB_DECIMALS} from '../../../config';\nimport { fCRCurrency } from '../../../utils/formatNumber';\nimport ReactPlaceholder from 'react-placeholder';\nimport \"react-placeholder/lib/reactPlaceholder.css\"\nimport dateFormat from \"dateformat\";\n\nconst price = 1/200;\nconst price_currency = 'BNB';\nconst seed_symbol = 'SHAZU';\n\nexport default function VinciPage() {\n  const { account } = useEthers();\n\n  // SUCCESS DIALOG\n  const [successModalOpen, setSuccessModalOpen] = useState(false);\n  const [successClaimModalOpen, setSuccessClaimModalOpen] = useState(false);\n\n  const handleCloseSuccessModal = () => {\n    setSuccessModalOpen(false);\n  };\n\n  const handleCloseSuccessClaimModal = () => {\n    setSuccessClaimModalOpen(false);\n  }\n\n  // SALE\n  const [saleProgress, setSaleProgress] = useState(0);\n  const [getAmount, setGetAmount] = useState(0);\n\n  const [amount, setAmount] = useState(0)\n\n  const [startTime, setStartTime] = useState(0)\n  const [endTime, setEndTime] = useState(0)\n  const [status, setStatus] = useState(0)\n  const [statusText, setStatusText] = useState('')\n  const [softCap, setSoftCap] = useState(utils.parseEther('0'))\n  const [hardCap, setHardCap] = useState(utils.parseEther('0'))\n  const [minBuy, setMinBuy] = useState(utils.parseEther('0'))\n  const [maxBuy, setMaxBuy] = useState(utils.parseEther('0'))\n  const [totalCollected, setTotalCollected] = useState(utils.parseEther('0'))\n  const [totalTokens, setTotalTokens] = useState(utils.parseEther('0'))\n  const [userTokenBalance, setUserTokenBalance] = useState(utils.parseEther('0'))\n  const [claimTokenBalance, setClaimTokenBalance] = useState(utils.parseEther('0'))\n\n  const [claimStatus, setClaimStatus] = useState(false)\n  \n\n  const [buyPrice, setBuyPrice] = useState(utils.parseEther('0'))\n\n  const [isTx, setIsTx] = useState(false)\n  const [tx, setTx] = useState('')\n\n  const contractData = useContractCalls([\n    {\n      abi: SHAZU_SEED_INTERFACE,\n      address: SHAZU_SEED_ADDRESS,\n      method: 'startTime',\n      args: []\n    },\n    {\n      abi: SHAZU_SEED_INTERFACE,\n      address: SHAZU_SEED_ADDRESS,\n      method: 'endTime',\n      args: []\n    },\n    {\n      abi: SHAZU_SEED_INTERFACE,\n      address: SHAZU_SEED_ADDRESS,\n      method: 'status',\n      args: []\n    },\n    {\n      abi: SHAZU_SEED_INTERFACE,\n      address: SHAZU_SEED_ADDRESS,\n      method: 'SOFTCAP',\n      args: []\n    },\n    {\n      abi: SHAZU_SEED_INTERFACE,\n      address: SHAZU_SEED_ADDRESS,\n      method: 'HARDCAP',\n      args: []\n    },\n    {\n      abi: SHAZU_SEED_INTERFACE,\n      address: SHAZU_SEED_ADDRESS,\n      method: 'MIN_BNB_PER_WALLET',\n      args: []\n    },\n    {\n      abi: SHAZU_SEED_INTERFACE,\n      address: SHAZU_SEED_ADDRESS,\n      method: 'MAX_BNB_PER_WALLET',\n      args: []\n    },\n    {\n      abi: SHAZU_SEED_INTERFACE,\n      address: SHAZU_SEED_ADDRESS,\n      method: 'totalCollected',\n      args: []\n    },\n    {\n      abi: SHAZU_SEED_INTERFACE,\n      address: SHAZU_SEED_ADDRESS,\n      method: 'participants',\n      args: [account]\n    },\n    {\n      abi: SHAZU_SEED_INTERFACE,\n      address: SHAZU_SEED_ADDRESS,\n      method: 'BUY_PRICE',\n      args: []\n    },\n    {\n      abi: SHAZU_SEED_INTERFACE,\n      address: SHAZU_SEED_ADDRESS,\n      method: 'getTokenAmount',\n      args: [account]\n    },\n    {\n      abi: SHAZU_SEED_INTERFACE,\n      address: SHAZU_SEED_ADDRESS,\n      method: 'getClaimStatus',\n      args: []\n    }\n  ]);\n\n\n  const bnbBalance = useEtherBalance(account)\n\n  const [errorMessage, setErrorMessage] = useState(0)\n\n  useEffect(() => {\n    if (contractData[0]) {\n\n      var date = new Date(contractData[0].toString() * 1000);\n\n      setStartTime(dateFormat(date, 'mmmm dS, yyyy, HH:MM:ss'))\n    }\n\n    if (contractData[1]) {\n      var date = new Date(contractData[1].toString() * 1000);\n\n      setEndTime(dateFormat(date, 'mmmm dS, yyyy, HH:MM:ss'))\n    }\n\n    if (contractData[2]) {\n      setStatus(contractData[2]);\n\n      if (contractData[2] == 0) {\n        setStatusText('Scheduled')\n      }\n\n      if (contractData[2] == 1) {\n        setStatusText('Active')\n      }\n      \n      if (contractData[2] == 2) {\n        setStatusText('Closed')\n      }\n\n      if (contractData[2] == 3) {\n        setStatusText('Failed')\n      }\n    }\n\n    if (contractData[3]) {\n      setSoftCap(contractData[3][0]);\n    }\n\n    if (contractData[4]) {\n      setHardCap(contractData[4][0]);\n    }\n\n    if (contractData[5]) {\n      setMinBuy(contractData[5][0]);\n    }\n\n    if (contractData[6]) {\n      setMaxBuy(contractData[6][0]);\n    }\n\n    if (contractData[7]) {\n      setTotalCollected(contractData[7][0]);\n    }\n\n    if (contractData[8]) {\n      setTotalTokens(contractData[8][0]);\n    }\n\n    if (contractData[9]) {\n      setBuyPrice(contractData[9][0]);\n    }\n\n    if (contractData[10]) {\n      setUserTokenBalance(contractData[10][0]);\n    }\n\n    if (contractData[11]) {\n      setClaimStatus(contractData[11][0]);\n    }\n\n    if (contractData[4] && contractData[7]) {\n\n      const progress = contractData[7][0].mul(utils.parseUnits('100', 6)).div(contractData[4][0])\n\n      setSaleProgress(Number(utils.formatUnits(progress, 6)))\n    }\n\n  }, [contractData]);\n\n\n\n  useEffect(() => {\n    \n    if (isTx) {\n      setSuccessModalOpen(true);\n      setIsTx(false)\n    }\n  }, [totalTokens, tx]);\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    value,\n    setError,\n    watch,\n    formState: { errors }\n  } = useForm();\n  const [result, setResult] = useState('');\n  const watchFields = watch(['amount']);\n\n  useEffect(() => {\n    const subscription = watch((value, { name, type }) => {\n      setGetAmount(value.amount / price);\n      const decimals = value.amount.split(\".\")\n\n      \n      if (value.amount == '') {\n        setAmount('0')\n      } else {\n        setAmount(value.amount)\n      }\n\n      if (decimals.length > 1 && decimals[1].length > 6) {\n        setAmount('0')\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, [watchFields]);\n\n  useEffect(() => {\n    if (amount == 0) {\n      setValue('amount', utils.formatUnits(minBuy.toString(), BNB_DECIMALS).toString(), {\n        shouldValidate: true,\n        shouldDirty: true\n      });\n    }\n    \n    const amountBN = utils.parseUnits(amount.toString(), BNB_DECIMALS)\n\n    if (amountBN.gt(maxBuy.sub(totalTokens))) {\n      setValue('amount', utils.formatUnits(maxBuy.toString(), BNB_DECIMALS).toString(), {\n        shouldValidate: true,\n        shouldDirty: true\n      });\n    } \n  }, [minBuy, amount]);\n\n  const handleMaxBuy = (e) => {\n    setValue('amount', utils.formatUnits((maxBuy.sub(totalTokens)).toString(), BNB_DECIMALS).toString(), {\n      shouldValidate: true,\n      shouldDirty: true\n    });\n    e.preventDefault();\n  };\n\n  const { state, send } = useContractFunction(SHAZU_SEED_CONTRACT, 'sell', { transactionName: 'Sell Tokens' });\n\n  const [buying, setBuying] = useState(false)\n\n  useEffect(() => {\n\n    if (state.status == 'Exception') {\n      setErrorMessage(state.errorMessage)\n    }\n    if (state.status === 'Exception' || state.status === 'Fail') {\n        setBuying(false)\n        setIsTx(false)\n        setErrorMessage(state.errorMessage)\n    }\n\n    if (state.status === 'None') {\n        setBuying(false)\n        setIsTx(false)\n        setErrorMessage('')\n    }\n\n    if (state.status === 'Success') {\n        setBuying(false)\n        setTx(state.transaction.hash)\n        setIsTx(true)\n        setErrorMessage('')\n    }\n}, [state]);\n\n  const handleBuySubmit = (data) => {\n    setBuying(true)\n    send({value: utils.parseUnits(amount.toString(), BNB_DECIMALS).toString()})\n  };\n\n  const onError = (errors, e) => console.log(errors, e);\n\n  const [accessState, setAccessState] = useState(false);\n  const [passwordState, setPasswordState] = useState('');\n  \n  const handleAccess = async () => {\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    \n    fetch(`https://admin.pincubator.io/verifyseedpassword?id=SHAZU&password=${passwordState}`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        if(result === 'VALID'){\n          setAccessState(true);\n        }else{\n          alert(\"INVALID PASSWORD\");\n        }\n      })\n      .catch(error => console.log('error', error));\n  }\n\n  const handlePasswordChange = (e) => {\n    setPasswordState(e.target.value);\n  }\n\n  // CLAIM\n  const [canClaim, setCanClaim] = useState(true);\n  const handleClaim = () => {\n    setSuccessClaimModalOpen(true);\n  }\n\n  return (\n    <>\n      {\n        !accessState &&\n        <section className=\"d-flex flex-column justify-content-center align-items-center\" style={{ height: '100vh', width: '100vw'}}>\n          <h3 className=\"text-center\">Input Seed Password for</h3>\n          <h2 style={{ fontWeight: 'bold'}}>${seed_symbol}</h2>\n\n          <input className=\"purple-input form-control\" style={{ maxWidth: '30rem'}} placeholder=\"Password\" value={passwordState} onChange={handlePasswordChange} />\n          <button onClick={handleAccess} className=\"button-outline mt-3\">ACCESS</button>\n        </section>\n      }\n      {\n        accessState &&\n        <>\n          <section className=\"section-dashboard\">\n            <motion.div\n              initial={{ opacity: 0, y: '-20vh' }}\n              animate={{ opacity: 1, y: '0' }}\n              exit={{ opacity: 0 }}\n              transition={{ duration: 1, type: 'spring' }}\n              className=\"container pt-5 d-flex flex-column\"\n              style={{ height: '100%', minHeight: '90vh', paddingTop: '7rem' }}\n            >\n              <Link to=\"/\" className=\"mt-5 mb-3\">\n                <button className=\"button-outline\">Go Back</button>\n              </Link>\n\n              <div className=\"Seed-introduction\">\n                <div className=\"row mb-3\">\n                  <div className=\"col-12 col-lg-8 mb-3\">\n                    <div className=\"d-flex flex-row flex-wrap align-items-center round-purple-border bg-darken Seed-introduction-badge\" style={{ minWidth: '25rem'}}>\n                      <img src=\"/static/seed/SHAZU/logo.png\" alt=\"\" className=\"Seed-introduction-logo\" />\n                      <div className=\"d-flex flex-column\">\n                        <h3 className=\"Seed-introduction-name\">{seed_symbol}</h3>\n                        <h6 className=\"m-0\">${seed_symbol}</h6>\n\n                        <div\n                          className=\"white-line\"\n                          style={{ marginTop: '0.5rem', marginBottom: '0.5rem', marginLeft: '0', width: '100%' }}\n                        />\n\n                        <h6 className=\"Seed-introduction-price\">1 {seed_symbol} = {price} {price_currency}</h6>\n                      </div>\n                    </div>\n\n                    <div className=\"mt-3\">\n                      <div className=\"sale-time\">\n                        <p>Network: Binance Smart Chain</p>\n                        {statusText ? (\n                        <p>Status: {statusText}</p>\n                        ): (\n                          ''\n                        )}\n                        \n                        {startTime && endTime && status < 2 ? (\n                        <p>Sale : {startTime} - {endTime} (local time)</p>\n                        ): (\n                          ''\n                        )}\n                      </div>\n                      <div className=\"Seed-introduction-desc\">\n                        Welcome to the special seed round of SHAZU. This is the only round that is open strictly only to Pincubators. There will be no public sale or presale. All tokens are unlocked & is 2x from listing price. \n                        <br/><br/>\n                        Shazu will have a dual economy ecosystem both involving its tokens and PFP NFTs. A metaverse game is on its way while in the mean time you can earn a strong passive income through its various protocols it will provide soon after launch. \n                        <br/><br/>\n                        The listing date of SHAZU is expected early April, & that is when you can claim your tokens. 🌱\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-12 col-lg-4\">\n                    <h5>Sale Info</h5>\n\n                    <div className=\"Seed-sale-item round-purple-border\">\n                      <h6 className=\"m-1\">\n                      <ReactPlaceholder type=\"textRow\" ready={true} showLoadingAnimation={true}>\n                      {/* <ReactPlaceholder type=\"textRow\" ready={softCap.toString() > 0} showLoadingAnimation={true}> */}\n                        Softcap: <span className=\"fw-bold\">{fCRCurrency(utils.formatUnits(softCap.toString(), BNB_DECIMALS))} {price_currency}</span>\n                      </ReactPlaceholder>\n                      </h6>\n                    </div>\n\n                    <div className=\"Seed-sale-item round-purple-border\">\n                      <h6 className=\"m-1\">\n                      <ReactPlaceholder type=\"textRow\" ready={true} showLoadingAnimation={true}>\n                      {/* <ReactPlaceholder type=\"textRow\" ready={hardCap.toString() > 0} showLoadingAnimation={true}> */}\n                        Hardcap: <span className=\"Seed-sale-item-amount\">{fCRCurrency(utils.formatUnits(hardCap.toString(), BNB_DECIMALS))} {price_currency}</span>\n                      </ReactPlaceholder>\n                      </h6>\n                    </div>\n\n                    <div className=\"Seed-sale-item round-purple-border\">\n                      <h6 className=\"m-1\">\n                      <ReactPlaceholder type=\"textRow\" ready={true} showLoadingAnimation={true}>\n                      {/* <ReactPlaceholder type=\"textRow\" ready={totalCollected.toString()} showLoadingAnimation={true}> */}\n                        Total Collected: <span className=\"Seed-sale-item-amount\">{fCRCurrency(utils.formatUnits(totalCollected.toString(), BNB_DECIMALS))} {price_currency}</span>\n                      </ReactPlaceholder>\n                      </h6>\n                    </div>\n\n                    <div className=\"Seed-sale-item round-purple-border\">\n                      <h6 className=\"m-1\">\n                      <ReactPlaceholder type=\"textRow\" ready={true} showLoadingAnimation={true}>\n                      {/* <ReactPlaceholder type=\"textRow\" ready={minBuy.toString() > 0} showLoadingAnimation={true}> */}\n                        Min {price_currency} per wallet: <span className=\"Seed-sale-item-amount d-block\">{fCRCurrency(utils.formatUnits(minBuy.toString(), BNB_DECIMALS))} {price_currency}</span>\n                      </ReactPlaceholder>\n                      </h6>\n                    </div>\n\n                    <div className=\"Seed-sale-item round-purple-border\">\n                      <h6 className=\"m-1\">\n                      <ReactPlaceholder type=\"textRow\" ready={true} showLoadingAnimation={true}>\n                      {/* <ReactPlaceholder type=\"textRow\" ready={maxBuy.toString() > 0} showLoadingAnimation={true}> */}\n                        Max {price_currency} per wallet: <span className=\"Seed-sale-item-amount d-block\">{fCRCurrency(utils.formatUnits(maxBuy.toString(), BNB_DECIMALS))} {price_currency}</span>\n                      </ReactPlaceholder>\n                      </h6>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mb-5\">\n                <div className=\"col-12 col-lg-8 mb-3\">\n                  <h4 className=\"fw-bold\">Sale</h4>\n                  <div className=\"d-flex flex-column round-purple-border mt-2 bg-darken p-2\">\n                    <div className=\"d-flex flex-row Seed-progress-label mb-1\" style={{ width: '100%'}}>\n                      {/* <div className=\"progress-softcap\">Hardcap: {fCRCurrency(utils.formatUnits(hardCap.toString(), BNB_DECIMALS))} {price_currency}</div> */}\n\n                      <div className=\"progress-percent-container ms-auto\">\n                        {saleProgress.toFixed(2)}%\n                      </div>\n                    </div>\n                    <CProgress className=\"mb-1\">\n                      <CProgressBar color=\"#CCCCCC\" variant=\"striped\" animated value={saleProgress} />\n                    </CProgress>\n\n                    <div\n                      className=\"white-line\"\n                      style={{\n                        marginTop: '0.5rem',\n                        marginBottom: '0.5rem',\n                        marginLeft: '0',\n                        width: '100%',\n                        maxWidth: 'unset'\n                      }}\n                    />\n                    { status == 1  &&  account ? (\n                    <form onSubmit={handleSubmit(handleBuySubmit, onError)}>\n                    <div className=\"d-flex flex-row mt-2\">\n                      <input\n                        {...register('amount', { required: true, max: utils.formatUnits((maxBuy.sub(totalTokens)).toString(), BNB_DECIMALS), min: utils.formatUnits(minBuy.toString(), BNB_DECIMALS) })}\n                        type=\"number\"\n                        step=\"0.000001\"\n                        className=\"form-control purple-input Seed-buy-amount\"\n                        placeholder=\"Buy amount\"\n                      />\n                      <button onClick={handleMaxBuy} className=\"button-outline purple-fill Seed-max-btn\">\n                        MAX\n                      </button>\n                    </div>\n                    {errors.amount && (\n                      <span className=\"invalid-danger\" style={{ marginTop: '-0.2' }}>\n                        Min: {utils.formatUnits(minBuy.toString(), BNB_DECIMALS)} {price_currency} | Max: {utils.formatUnits((maxBuy.sub(totalTokens)).toString(), BNB_DECIMALS)} {price_currency}\n                      </span>\n                    )}\n\n                    {errorMessage ? (\n                      <span className=\"invalid-danger\" style={{ marginTop: '-0.2' }}>\n                        {errorMessage}\n                      </span>\n                    ): (\n                      ''\n                    )}\n                    <div className=\"buy-result\">You'll get {getAmount} {seed_symbol}</div>\n                    \n                    { bnbBalance !== undefined && bnbBalance.gte(utils.parseUnits(amount)) ? (\n                    <button className=\"button-outline purple-fill mt-4 w-100\" style={{ padding: '0.3rem' }} type=\"submit\" disabled={buying}>\n                      {!buying ? (\n                      'Buy'\n                      ):(\n                      'Buying...' \n                      )}\n                    </button>\n                    ): (\n                      <span className=\"invalid-danger\" style={{ marginTop: '-0.2' }}>\n                      No BNB available to buy\n                      </span>\n                    )}\n                    \n                    </form>\n                    ): (\n                      ''\n                    )}\n                  </div>\n                </div>\n                \n                { account ? (\n                <div className=\"col-12 col-lg-4 mb-3\">\n                  <h5>Balance Info</h5>\n\n                  <div className=\"Seed-sale-item round-purple-border\">\n                    <h6 className=\"m-1\">\n                      Token Balance: <span className=\"Seed-sale-item-amount\">\n                        {totalTokens ? (\n                          <ReactPlaceholder type=\"textRow\" ready={true} showLoadingAnimation={true}>\n                            {fCRCurrency(utils.formatEther(userTokenBalance.toString()))} {seed_symbol}\n                          </ReactPlaceholder>\n                        ) : (\n                          `0 ${seed_symbol}`\n                        )}\n                        </span>\n                    </h6>\n                    {claimStatus && userTokenBalance.gt(utils.parseEther('0')) ?\n                      <ClaimButton handleClaim={handleClaim} tokenBalance={userTokenBalance} setTokenBalance={setClaimTokenBalance} setTx={setTx}/>\n                      :\n                      ''\n                    }\n                    \n                  </div>\n                </div>\n                ) : (\n                  ''\n                )}\n              </div>\n            </motion.div>\n          </section>\n\n          <AnimatePresence initial={false} exitBeforeEnter={true} onExitComplete={() => null}>\n            {successModalOpen && (\n              <CustomDialog modalOpen={successModalOpen} handleClose={handleCloseSuccessModal}>\n                <img src=\"/static/img/success-check.svg\" alt=\"\" style={{ width: '3rem', marginBottom: '1rem' }} />\n\n                <h2 className=\"text-center\">Buy Success!</h2>\n                <h6 className=\"text-center\">\n\n                  {tx ? (\n                  <>\n                  Tx:{' '}\n                  <a\n                    href={`https://mumbai.polygonscan.com/tx/${tx}`}\n                    target=\"_blank\"\n                  >\n                    {shortenTransactionHash(tx)}\n                  </a>\n                  </>\n                  ) : (\n                    ''\n                  )}\n                </h6>\n\n                <div className=\"d-flex flex-wrap flex-row justify-content-center mt-3\">\n                  <button className=\"button-outline m-2 purple-fill\" onClick={handleCloseSuccessModal}>\n                    Alright!\n                  </button>\n                </div>\n              </CustomDialog>\n            )}\n\n            {successClaimModalOpen && (\n              <CustomDialog modalOpen={successClaimModalOpen} handleClose={handleCloseSuccessClaimModal}>\n                <img src=\"/static/img/success-check.svg\" alt=\"\" style={{ width: '3rem', marginBottom: '1rem' }} />\n\n                <h2 className=\"text-center\">Claim Success!</h2>\n                <h6 className=\"text-center\">\n                  Claimed: <strong>{fCRCurrency(utils.formatEther(claimTokenBalance.toString()))} SHAZU</strong>\n                </h6>\n\n                <h6 >\n                  {tx ? (\n                  <>\n                    Tx:{' '}\n                    <a\n                      href={`https://mumbai.polygonscan.com/tx/${tx}`}\n                      target=\"_blank\"\n                      style={{ marginTop: '1rem'}}\n                    >\n                      {shortenTransactionHash(tx)}\n                    </a>\n                  </>\n                  ) : (\n                    ''\n                  )}\n                </h6>\n\n                <div className=\"d-flex flex-wrap flex-row justify-content-center mt-3\">\n                  <button className=\"button-outline m-2 purple-fill\" onClick={handleCloseSuccessClaimModal}>\n                    Alright!\n                  </button>\n                </div>\n              </CustomDialog>\n            )}\n          </AnimatePresence>\n        </>\n      }\n      \n    </>\n  );\n}\n","import './App.css';\n\nimport { HashRouter as Router, Link, Route, Routes } from 'react-router-dom';\nimport { useLocation } from 'react-router';\nimport { useEffect } from 'react';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { DAppProvider, Mumbai, Polygon } from '@usedapp/core';\n// Components\nimport Header from './components/Layouts/Header';\n\n// Pages\nimport HomePage from './components/Pages/HomePage';\nimport SeedPage from './components/Pages/SeedPage/SeedPage';\nimport VinciPage from './components/Pages/SeedPage/VinciPage';\nimport ShazuPage from './components/Pages/SeedPage/ShazuPage';\n\nconst helmetContext = {};\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10);\n\nconst config = {\n  readOnlyChainId: chainId,\n  readOnlyUrls: {\n    [chainId]: process.env.REACT_APP_RPC_URL\n  },\n  networks: [Polygon, Mumbai],\n  pollingInterval: 3000\n};\n\nfunction App() {\n  return (\n    <>\n      <DAppProvider config={config}>\n        <HelmetProvider context={helmetContext}>\n          <Router>\n            <Header />\n            <div className=\"background\">\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n            <div className=\"pages\">\n              <Routes>\n                {/*<Route exact path=\"/\" element={<HomePage />}/>*/}\n\n                {/* SEED */}\n                <Route path=\"/\" exact element={<SeedPage />} />\n                <Route path=\"/vinci\" element={<SeedPage />} />\n                <Route path=\"/shazu\" element={<ShazuPage />} />\n\n                <Route\n                  path=\"*\"\n                  element={\n                    <main\n                      className=\"d-flex flex-column justify-content-center align-items-center\"\n                      style={{ zIndex: '3', position: 'relative', height: '70vh' }}\n                    >\n                      <div>\n                        <p>There's nothing here!</p>\n                        <Link to=\"/\">\n                          <button className=\"bubbly-button\">Back to Home</button>\n                        </Link>\n                      </div>\n                    </main>\n                  }\n                />\n              </Routes>\n            </div>\n          </Router>\n        </HelmetProvider>\n      </DAppProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}